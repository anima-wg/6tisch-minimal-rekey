<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7252 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml">
<!ENTITY RFC7049 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml">
<!ENTITY I-D.ietf-cose-msg SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-cose-msg.xml">
<!ENTITY I-D.ietf-core-object-security SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-object-security.xml">
<!ENTITY RFC7554 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7554.xml">
<!ENTITY RFC6775 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC6347 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC5869 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5869.xml">
<!ENTITY RFC4231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4231.xml">
<!ENTITY RFC7721 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7721.xml">
<!ENTITY I-D.ietf-6tisch-minimal SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-minimal.xml">
<!ENTITY I-D.ietf-6tisch-6top-protocol SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-6top-protocol.xml">
<!ENTITY I-D.ietf-6tisch-terminology SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-terminology.xml">
<!ENTITY I-D.selander-ace-cose-ecdhe SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.selander-ace-cose-ecdhe.xml">
]>

<?rfc toc="yes"?>
<?rfc softrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-6tisch-minimal-security-00" category="std">

  <front>
    <title>Minimal Security Framework for 6TiSCH</title>

    <author initials="M." surname="Vucinic" fullname="Malisa Vucinic">
      <organization>Inria</organization>
      <address>
        <postal>
          <street>2 Rue Simone Iff</street>
          <city>Paris</city>
          <code>75012</code>
          <country>France</country>
        </postal>
        <email>malisa.vucinic@inria.fr</email>
      </address>
    </author>
    <author initials="J." surname="Simon" fullname="Jonathan Simon">
      <organization>Linear Technology</organization>
      <address>
        <postal>
          <street>32990 Alvarado-Niles Road, Suite 910</street>
          <city>Union City, CA</city>
          <code>94587</code>
          <country>USA</country>
        </postal>
        <email>jsimon@linear.com</email>
      </address>
    </author>
    <author initials="K." surname="Pister" fullname="Kris Pister">
      <organization>University of California Berkeley</organization>
      <address>
        <postal>
          <street>512 Cory Hall</street>
          <city>Berkeley, CA</city>
          <code>94720</code>
          <country>USA</country>
        </postal>
        <email>pister@eecs.berkeley.edu</email>
      </address>
    </author>

    <date year="2017" month="February" day="02"/>

    <area>Internet</area>
    <workgroup>6TiSCH Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This draft describes the minimal mechanisms required to support secure
initial configuration in a device being added to a 6TiSCH network.
The goal of this configuration is to set link-layer keys, and to establish a
secure session between each joining node and the JCE who may use that to
further configure the joining device.
Additional security behaviors and mechanisms may be added on top of this minimal framework.</t>



    </abstract>


  </front>

  <middle>


<section anchor="problems" title="Introduction">

<t>When a previously unknown device seeks admission to a 6TiSCH
<xref target="RFC7554"/> network (to "join"), it first needs to synchronize to the
network.  The device then configures its IPv6 address and
authenticates itself, and also validates that it is joining the right
network.  At this point it can expect to interact with the network to
configure its link-layer keying material.  Only then may the node
establish an end-to-end secure session with an Internet host using
DTLS <xref target="RFC6347"/> or OSCOAP <xref target="I-D.ietf-core-object-security"/>.  Once the
application requirements are known, the device interacts with its
peers to request additional resources as needed, or to be
reconfigured as the network changes <xref target="I-D.ietf-6tisch-6top-protocol"/>.</t>

<t>This document describes the mechanisms comprising a minimal feature
set for a device to join a 6TiSCH network, up to the point where it
can establish a secure session with an Internet host.</t>

<t>It presumes a network as described by <xref target="RFC7554"/>,
<xref target="I-D.ietf-6tisch-6top-protocol"/>, and <xref target="I-D.ietf-6tisch-terminology"/>.
It assumes the joining device pre-configured with either a:</t>

<t><list style="symbols">
  <t>pre-shared key (PSK),</t>
  <t>raw public key (RPK),</t>
  <t>or a locally-valid certificate and a trust anchor.</t>
</list></t>

<t>As the outcome of the join process, the joining device expects one or
more link-layer key(s) and optionally a temporary network identifier.</t>

</section>
<section anchor="Terminology" title="Terminology">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", 
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this 
document are to be interpreted as described in <xref target="RFC2119"/>. These words
may also appear in this document in lowercase, absent their normative meanings.</t>

<t>The reader is expected to be familiar with the terms and concepts
defined in <xref target="I-D.ietf-6tisch-terminology"/>, <xref target="RFC7252"/>, and
<xref target="I-D.ietf-core-object-security"/>.  The entities participating in the
protocol that is specified in this document are:</t>

<t><list style="symbols">
  <t>JN: Joining node - the device attempting to join a particular 6TiSCH network.</t>
  <t>JCE: Join coordinating entity - central entity responsible for
 authentication and authorization of joining nodes.</t>
  <t>JA: Join assistant - the device within radio range of the JN that generates
    Enhanced Beacons (EBs) and facilitates end-to-end communications between the JN and JCE.</t>
</list></t>

</section>
<section anchor="join-overview" title="Join Overview">

<t>This section describes the steps taken by a joining node (JN) in a
6TiSCH network.  When a previously unknown device seeks admission to
a 6TiSCH <xref target="RFC7554"/> network, the following exchange occurs:</t>

<t><list style="numbers">
  <t>The JN listens for an Enhanced Beacon (EB) frame
   <xref target="IEEE802154-2015"/>.  This frame provides network synchronization
   information, and tells the device when it can send a frame to the
   node sending the beacons, which plays the role of Join Assistant
   (JA) for the JN, and when it can expect to receive a frame.</t>
  <t>The JN configures its link-local IPv6 address and advertises it
   to JA.</t>
  <t>The JN sends packets to the JA device in order to securely
   identify itself to the network.  These packets are directed to
   the Join Coordination Entity (JCE), which may be the JA or
   another device.</t>
  <t>The JN receives one or more packets from JCE (via the JA) that
   sets up one or more link-layer keys used to authenticate
   subsequent transmissions to peers.</t>
</list></t>

<t>From the joining node's perspective, minimal joining is a local
phenomenon - the JN only interacts with the JA, and it need not know
how far it is from the DAG root, or how to route to the JCE.  Only
after establishing one or more link-layer keys does it need to know
about the particulars of a 6TiSCH network.</t>

<t>The handshake is shown as a transaction diagram in <xref target="fig_sequence-diagram"/>:</t>

<figure title="Message sequence for join protocol." anchor="fig_sequence-diagram"><artwork align="center"><![CDATA[
+-----+               +----------+              +-----------+
| JCE |               |    JA    |              |     JN    |
|     |               |          |              |           |
+-----+               +----------+              +-----------+
   |                        |                            |
   |                        |-----------ENH BEACON (1)-->|
   |                        |                            |
   |                        |<--Neighbor Discovery (2)-->|
   |                        |                            |
   |<--Sec. Handshake (3a)--|---Security Handshake (3)-->|
   |                        |                            |
   |<----Join request (4a)--|---------Join request (4)---|
   |                        |                            |
   |----Join response (5a)--|--------Join response (5)-->|
   |                        |                            |
]]></artwork></figure>

<t>The details of each step are described in the following sections.</t>

<section anchor="step-1-enhanced-beacon" title="Step 1 - Enhanced Beacon">

<t>The JN hears an EB from the JA and synchronizes itself to the joining
schedule using the cells contained in the EB.  At this point the JN
MAY proceed to step 2, or continue to listen for additional EBs.  If
more than one EB is heard, the JN MAY use a metric based on DAG rank
and received signal level of the EB, or other factors to decide which
JA to use for the security handshake in step 3.  Details on how a JN
chooses the JA are out of scope of this specification.</t>

</section>
<section anchor="step-2-neighbor-discovery" title="Step 2 - Neighbor Discovery">

<t>At this point, JN forms its link-local IPv6 address based on EUI64
   and MAY further follow the Neighbor Discovery (ND) process described
   in Section 5 of <xref target="RFC6775"></xref>.</t>

</section>
<section anchor="step-3-security-handshake" title="Step 3 - Security Handshake">

<t>The security handshake between JN and JCE uses Ephemeral Diffie-
Hellman over COSE (EDHOC) <xref target="I-D.selander-ace-cose-ecdhe"/> to establish
the shared secret used to encrypt the join request and join response.</t>

<t>The security handshake step is OPTIONAL in case PSKs are used, while
it is REQUIRED for RPKs and certificates.  In case the handshake step
is omitted, the shared secret used for protection of the join request
and join response in the next step is the PSK.  This means that the
protocol trades off perfect forward secrecy for reduced traffic load
between JN and JCE.  A consequence is that if the long-term PSK is
compromised, keying material transferred as part of the join response
is compromised as well.  Physical compromise of the JN, however,
would also imply the compromise of the same keying material, as it is
likely to be found in node's memory.</t>

<section anchor="pre-shared-key" title="Pre-Shared Key">

<t>The Diffie-Hellman key exchange and the use of EDHOC is optional,
when using a pre-shared symmetric key.  This cuts down on traffic
between JCE and JN, but requires pre-configuration of the shared key
on both devices.</t>

<t>It is REQUIRED to use unique PSKs for each JN.</t>

</section>
<section anchor="asymmetric-keys" title="Asymmetric Keys">

<t>The Security Handshake step is required, when using asymmetric keys.
Before conducting the Diffie-Hellman key exchange using EDHOC
<xref target="I-D.selander-ace-cose-ecdhe"/> the JN and JCE need to receive and
validate each other's public key certificate.  When RPKs are pre-
configured at JN and JCE, they can directly proceed to the handshake.</t>

</section>
</section>
<section anchor="step-4-join-request" title="Step 4 - Join Request">

<t>The join request is sent from the JN to the JA using the slot
information from the EB, and forwarded to the JCE.</t>

<t>The join request is authenticated/encrypted end-to-end using AES-CCM-
16-64-128 algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from
the shared secret from step 3.  The nonce is derived from the shared
secret, JN's EUI64 and a monotonically increasing counter initialized
to 0 when first starting.</t>

</section>
<section anchor="step-5-join-response" title="Step 5 - Join Response">

<t>The join response is sent from the JCE to the JN through JA that
serves as a stateless relay.  Packet containing the join response
travels on the path from JCE to JA using pre-established routes in
the network.  The JA delivers it to the JN using the slot information
from the EB.  JA operates as the application-layer proxy and does not
keep any state to relay the message.  It uses information sent in the
clear within the join response to decide where to forward to.</t>

<t>The join response is authenticated/encrypted using AES-CCM-16-64-128
algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from the shared
secret from step 3.  The nonce is derived from the shared secret,
JN's EUI64 and a monotonically increasing counter matching that of
the join request.</t>

<t>The join response contains one or more (per-peer) link-layer key(s)
K2 that the JN will use for subsequent communication.  It optionally
also contains an IEEE 802.15.4 short-address <xref target="IEEE802154-2015"/>
assigned to JN by JCE.</t>

</section>
</section>
<section anchor="protocol-specification" title="Protocol Specification">

<t>The join protocol in <xref target="fig_sequence-diagram"/> is implemented over Constrained
Application Protocol (CoAP) <xref target="RFC7252"/>.  JN plays the role of a CoAP
client, JCE the role of a CoAP server, while JA implements CoAP
forward proxy functionality <xref target="RFC7252"/>.  Since JA is likely a
constrained device, it does not need to implement a cache but rather
process forwarding-related CoAP options and make requests on behalf
of JN that is not yet part of the network.</t>

<t>JN and JCE MUST protect their exchange end-to-end (i.e. through the
proxy) using Object Security of CoAP (OSCOAP)
<xref target="I-D.ietf-core-object-security"/>.</t>

<section anchor="proxy-operation-of-ja" title="Proxy Operation of JA">

<t>JN designates a JA as a proxy by including in the CoAP requests to
the JA the Proxy-Scheme option with value "coap" (CoAP-to-CoAP
proxy).  JN MUST include the Uri-Host option with its value set to
the well-known JCE's alias - "6tisch.jce".  JN does not need to learn
the actual IPv6 address of JCE at any time during the join protocol.
JA resolves the address by performing a GET request at "/jce"
resource of its parent in the DODAG.</t>

<t>Note that the CoAP proxy by default keeps state information in order
to forward the response towards the originator of the request.  This
state information comprises CoAP token, but the implementations also
need to keep track of the IPv6 address of the host, as well as the
corresponding UDP source port number.  In the setting where the proxy
is a constrained device, as in the case of JA, this makes it prone to
Denial of Service (DoS) attacks, due to the limited memory.</t>

<t>In order to facilitate a stateless implementation of JA proxying, JN
shall encode in the CoAP message the information necessary for the JA
to send the response back - "origin_info".  For this purpose, JN uses
the "Context Identifier (Cid)" parameter of OSCOAP's security context
structure.  Context Identifier is sent in clear, readable by JA, and
MUST be echoed back in the response from JCE.  This makes it possible
to implement JA's CoAP proxy in a stateless manner.  It also allows
JCE to look up the right security context for communication with a
given JN.</t>

<section anchor="implementation-of-origininfo" title="Implementation of origin_info">

<t>The origin_info is implemented as a CBOR <xref target="RFC7049"/> array object
containing:</t>

<t><list style="symbols">
  <t>EUI64: JN's EUI64 address</t>
  <t>source_port: JN's UDP source port</t>
  <t>token: JN's CoAP token</t>
</list></t>

<figure><artwork><![CDATA[
origin_info = [
    EUI64 : bstr,
    source_port : uint,
    token : uint
]
]]></artwork></figure>

</section>
</section>
<section anchor="oscoap-security-context-instantiation" title="OSCOAP Security Context Instantiation">

<t>The OSCOAP security context MUST be derived at JN and JCE as per
Section 3.2 of <xref target="I-D.ietf-core-object-security"></xref> using HKDF <xref target="RFC5869"></xref>
as the key derivation function.</t>

<t><list style="symbols">
  <t>Context Identifier (Cid) MUST be the origin_info object wrapped as
    a byte string (bstr).</t>
  <t>Algorithm MUST be set to AES-CCM-16-64-128 from
    <xref target="I-D.ietf-cose-msg"></xref>.  CoAP messages are therefore protected with
    an 8-byte CCM authentication tag and the algorithm uses 13-byte
    long nonces.</t>
  <t>Base key (base_key) MUST be the secret generated by the run of
    EDHOC, or the PSK in case EDHOC step was omitted.</t>
  <t>Sender ID of JN MUST be set to 0x00, while the ID of JCE MUST be
    set to 0x01.</t>
</list></t>

<t>The hash algorithm that instantiates HKDF MUST be SHA-256 <xref target="RFC4231"></xref>.
The derivation in <xref target="I-D.ietf-core-object-security"/> results in traffic
keys and static IVs for each side of the conversation.  Nonces are
constructed by XOR'ing the static IV with current sequence number.
The context derivation process occurs exactly once.  Implementations
MUST ensure that multiple CoAP requests to different JCEs result in
the use of the same OSCOAP context so that sequence numbers are
properly incremented for each request.  This may happen in a scenario
where there are multiple 6TiSCH networks present and the JN tries to
join one network at a time.</t>

</section>
<section anchor="implementation-of-join-request" title="Implementation of Join Request">

<t>Join Request message SHALL be mapped to a CoAP request:</t>

<t><list style="symbols">
  <t>The request method is GET.</t>
  <t>The Proxy-Scheme option is set to "coap".</t>
  <t>The Uri-Host option is set to "6tisch.jce".</t>
  <t>The Uri-Path option is set to "j".</t>
  <t>The object security option SHALL be set according to
<xref target="I-D.ietf-core-object-security"/> and OSCOAP parameters set as
described above.</t>
</list></t>

</section>
<section anchor="implementation-of-join-response" title="Implementation of Join Response">

<t>If OSCOAP processing is a success, Join Response message SHALL be a
CoAP response:</t>

<t><list style="symbols">
  <t>The response Code is 2.05 (Content).</t>
  <t>The payload is a CBOR array containing, in order:
  <list style="symbols">
      <t>COSE Key Set <xref target="I-D.ietf-cose-msg"></xref>.  Each key in the Key Set
SHALL be a symmetric key.  A key that is present in the Key Set
and does not have an identifier is assumed to be "K2" link-
layer key from <xref target="I-D.ietf-6tisch-minimal"></xref>.  Parameter "kid" of
the COSE Key structure SHALL be used to denote pair-wise keys
if present, where the value SHALL be set to the address of the
corresponding peer.</t>
      <t>Optional byte string representing IEEE 802.15.4 short address
assigned to JN.  If the length of the byte string is different
than 2 bytes, the implementation SHOULD ignore it.</t>
    </list></t>
</list></t>

<figure><artwork><![CDATA[
payload = [
    COSE_KeySet,
    ? short_address : bstr,
]
]]></artwork></figure>

<t>In case JCE determines that JN is not supposed to join the network
(e.g. by failing to find an appropriate security context), it should
respond with a 4.01 Unauthorized error.  Upon reception of a 4.01
Unauthorized, JN SHALL attempt to join the next advertised 6TiSCH
network.  If all join attempts have failed at JN, JN SHOULD signal to
the user by an out-of-band mechanism the presence of an error
condition.</t>

</section>
</section>
<section anchor="link-layer-requirements" title="Link-layer requirements">

<t>All frames in a 6TiSCH network MUST use link-layer frame security.
The frame security options MUST include frame authentication, and MAY
include frame encryption.</t>

<t>In order for the JN to be able to validate that the Enhanced Beacon
frame is coming from a 6TiSCH network, EB frames are authenticated at
the link layer using CCM* per <xref target="IEEE802154-2015"/>.  Link-layer frames
are protected with a 16-byte key, and a 13-byte nonce constructed
from current Absolute Slot Number (ASN) and the source (the JA for
EBs) address, as shown in <xref target="fig_ccm-nonce"/>:</t>

<figure title="Link-layer CCM* nonce construction" anchor="fig_ccm-nonce"><artwork align="center"><![CDATA[
+-------------------------------------------+
|  Address (8B or 00-padded 2B) | ASN (5B)  |
+-------------------------------------------+
]]></artwork></figure>

<t>The JN uses the initial key K1 <xref target="I-D.ietf-6tisch-minimal"/> until it is
configured with a new link-layer key K2 as described above.  JA
SHOULD secure/verify DATA and ACKNOWLEDGMENT frames destined/
originated at JN with K1 only during the duration of the join
process.  How JA learns whether the join process is ongoing is out of
scope of this specification.</t>

<t>As the EB itself does not contain security information, where the
link key is known, an attacker may craft a frame that appears to be a
valid EB, since the JN can neither know the ASN a priori nor verify
the address of the JA.  This permits a Denial of Service (DoS) attack
at the JN.  Beacon authentication keys are discussed in Section 5.1
and Section 5.2.</t>

<section anchor="well-known-beacon-authentication-key" title="Well-known beacon authentication key">

<t>For zero-touch operation, where any 6TiSCH device can attempt to join
any 6TiSCH network out of the box, a well-known EB link-layer key
MUST be used.  The value of this key is specified in
<xref target="I-D.ietf-6tisch-minimal"/></t>

</section>
<section anchor="private-beacon-authentication-key" title="Private beacon authentication key">

<t>Some pre-configuration MAY be done when the device is manufactured or
designated for a specific network (i.e. the network is one-touch) or
a network operator may not wish to allow arbitrary devices to try to
join.  A private (per-vendor, or per-installation) EB link-layer key
MAY be used in place of a well-known key to create a private network.</t>

</section>
</section>
<section anchor="asymmetric-keys-1" title="Asymmetric Keys">

<t>Certificates or pre-configured RPKs may be used to exchange public
keys between the JN and JCE.  The key pair is generated using
elliptic curve secp256r1, and the certificate containing the public
key is signed using ECDSA.  The certificate itself may be a compact
representation of an X.509 certificate, or a full X.509 certificate.
Compact representation of X.509 certificates is out of scope of this
specification.  The certificate is signed by a root CA whose
certificate is installed on all nodes participating in a particular
6TiSCH network, allowing each node to validate the certificate of the
JCE or JN as appropriate.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>In case PSKs are used, this document mandates that JN and JCE are
pre-configured with unique keys.  The uniqueness of generated nonces
is guaranteed under the assumption of unique EUI64 identifiers for
each JN.  Note that the address of the JCE does not take part in
nonce construction.  Therefore, even under the assumption of a PSK
shared by a group of nodes, the nonces constructed as part of the
different responses are unique.  The design differentiates between
nonces constructed for requests and nonces constructed for responses
by different sender identifiers (0x00 for JN and 0x01 for JCE).</t>

<t>Being a stateless relay, JA blindly forwards the join traffic into
the network.  While the exchange between JN and JA takes place over a
shared cell, join traffic is forwarded using dedicated cells on the
JA to JCE path.  In case of distributed scheduling, the join traffic
may therefore cause intermediate nodes to request additional
bandwidth.  Because the relay operation of JA is implemented at the
application layer, JA is the only hop on the JA-6LBR path that can
distinguish join traffic from regular IP traffic in the network.  It
is therefore permitted to implement rate limiting at JA.</t>

<t>The shared nature of the "minimal" cell used for join traffic makes
the network prone to DoS attacks by congesting the JA with bogus
radio traffic.  As such an attacker is limited by emitted radio
power, redundancy in the number of deployed JAs alleviates the issue
and also gives JN a possibility to use the best available link for
join.  How a network node decides to become a JA is out of scope of
this specification.</t>

<t>Because the well-known beacon authentication key does not provide any
security, it is feasible for an attacker to generate EBs that will
get accepted at JN.  At the time of the join, JN has no means of
verifying the content in the EB and has to accept it at "face value".
As the join response message in such cases will either fail the
security check or time out, JN may implement a blacklist in order to
filter out undesired beacons and try to join the next seemingly valid
network.  The blacklist alleviates the issue but is effectively
limited by the node's available memory.  Such bogus beacons will
prolong the join time of JN and so the time spent in "minimal"
<xref target="I-D.ietf-6tisch-minimal"/> duty cycle mode.  The permitted practice is
to use a private, per-installation beacon authentication key.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>This specification relies on the uniqueness of EUI64 that is
transferred in clear as part of the security context identifier.
Privacy implications of using such long-term identifier are discussed
in <xref target="RFC7721"/> and comprise correlation of activities over time,
location tracking, address scanning and device-specific vulnerability
exploitation.  Since the join protocol is executed rarely compared to
the network lifetime, long-term threats that arise from using EUI64
are minimal.  In addition, the join response message contains an
optional short address which can be assigned by JCE to JN.  Short
address is independent of the long-term identifier EUI64 and is
encrypted in the response.  For that reason, it is not possible to
correlate the short address with the EUI64 used during the join.  Use
of short addresses once the join protocol completes mitigates the
aforementioned privacy risks.  In addition, EDHOC may be used for
identity protection during the join protocol by generating a random
context identifier in place of the EUI64
<xref target="I-D.selander-ace-cose-ecdhe"/>.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>There is no IANA action required for this document.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The work on this document has been partially supported by the
European Union's H2020 Programme for research, technological
development and demonstration under grant agreement No 644852,
project ARMOUR.</t>

<t>The authors are grateful to Thomas Watteyne and Goeran Selander for
reviewing the draft.  The authors would also like to thank Francesca
Palombini and Ludwig Seitz for participating in the discussions that
have helped shape the document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC7252;
&RFC7049;
&I-D.ietf-cose-msg;
&I-D.ietf-core-object-security;


    </references>

    <references title='Informative References'>

&RFC7554;
&RFC6775;
&RFC6347;
&RFC5869;
&RFC4231;
&RFC7721;
&I-D.ietf-6tisch-minimal;
&I-D.ietf-6tisch-6top-protocol;
&I-D.ietf-6tisch-terminology;
&I-D.selander-ace-cose-ecdhe;
<reference anchor="IEEE802154-2015" >
  <front>
    <title>IEEE Std 802.15.4-2015 Standard for Low-Rate Wireless Personal Area Networks (WPANs)</title>
    <author initials="." surname="IEEE standard for Information Technology">
      <organization></organization>
    </author>
    <date year="2015"/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t><xref target="fig_example-psk"/> illustrates a join protocol exchange in case PSKs are used.
JN instantiates the OSCOAP context and derives the traffic keys and
nonces from the PSK.  It uses the instantiated context to protect the
CoAP request addressed with Proxy-Scheme option and well-known host
name of JCE in the Uri-Host option.  The example assumes a JA that is
already aware of JCE's IPv6 address and does not need to resolve the
well-known "6tisch.jce" host name.  Triggered by the presence of
Proxy-Scheme option, JA forwards the request to the JCE.  Once JCE
receives the request, it looks up the correct context based on the
context identifier (cid) field.  It reconstructs OSCOAP's external
Additional Authenticated Data (AAD) needed for verification based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"/></t>
  <t>Request URI reconstructed following
    <xref target="I-D.ietf-core-object-security"/>.</t>
</list></t>

<t>Replay protection is ensured by OSCOAP and the tracking of sequence
numbers at each side.  In the example below, the response contains
sequence number 7 meaning that there have already been some attempts
to join under a given context, not coming from the JN.  Once JA
receives the response, it looks up and decodes the cid field in order
to decide where to forward it.  JA constructs the CoAP response to JN
by setting the CoAP token to the value decoded from cid and
constructs the link-local IPv6 address of JN from the EUI64 address
found in the cid.  Note that JA does not posses the key to decrypt
the COSE object present in the payload so the join_response object is
opaque to it.  The response is matched to the request and verified
for replay protection at JN using OSCOAP processing rules.  Namely,
to verify the response JN reconstructs the AAD based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"></xref>.</t>
  <t>Transaction identifier (Tid) of the corresponding CoAP request.
    Tid contains the context identifier (origin_info object), Sender
    ID (0x00 for JN), and Sender Sequence number (set to 1 in the
    example).</t>
</list></t>

<t>In addition to AAD, JN also uses the explicit, protected fields in
the COSE message, present in the payload of the response.  For more
details, see <xref target="I-D.ietf-core-object-security"/> and <xref target="I-D.ietf-cose-msg"/>.</t>

<figure title="Example of a join protocol exchange with a PSK. {} denotes encryption and authentication, [] denotes authentication." anchor="fig_example-psk"><artwork align="center"><![CDATA[
<--E2E OSCOAP-->
Client  Proxy Server
JN     JA     JCE
|      |      |
+----->|      |            Code: [0.01] (GET)
| GET  |      |           Token: 0x8c
|      |      |    Proxy-Scheme: [coap]
|      |      |        Uri-Host: [6tisch.jce]
|      |      | Object-Security: [cid:origin_info, seq:1,
|      |      |                   {Uri-Path:"j"},
|      |      |                   <Tag>]
|      |      |         Payload: -
|      |      |
|      +----->|            Code: [0.01] (GET)
|      | GET  |           Token: 0x7b
|      |      |        Uri-Host: [6tisch.jce]
|      |      | Object-Security: [cid:origin_info, seq:1,
|      |      |                   {Uri-Path:"j"},
|      |      |                   <Tag>]
|      |      |         Payload: -
|      |      |
|      |<-----+            Code: [2.05] (Content)
|      | 2.05 |           Token: 0x7b
|      |      | Object-Security: -
|      |      |         Payload: [cid: origin_info, seq:7,
|      |      |                   {join_response}, <Tag>]
|      |      |
|<-----+      |            Code: [2.05] (Content)
| 2.05 |      |           Token: 0x8c
|      |      | Object-Security: -
|      |      |         Payload: [cid: origin_info, seq:7,
|      |      |                   {join_response}, <Tag>]
|      |      |
]]></artwork></figure>

<t>Where origin_info and join_response are as follows.</t>

<figure><artwork><![CDATA[
origin_info:
[
    h'00170d00060d9f0e', / JN's EUI64 /
    49152, / JN's UDP source port /
    0x8c   / JN's CoAP token /
]
]]></artwork></figure>

<t>Encodes to h'834800170d00060d9f0e19c000188c' with a size of 15 bytes.</t>

<figure><artwork><![CDATA[
join_response:
[
    [   / COSE Key Set array with a single key /
        {
            1:4, / key type symmetric /
            -1:h'e6bf4287c2d7618d6a9687445ffd33e6' / key value /
        }
    ],
    h'af93' / assigned short address /
]
]]></artwork></figure>

<t>Encodes to h'8281a201042050e6bf4287c2d7618d6a9687445ffd33e642af93'
with a size of 26 bytes.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAOYxk1gAA+VdW3PbRpZ+71/RpTxYyhA0SUuyrZrJDi0psXyRtKY8ma2s
KwUCTRIRCHDQoGQm8f72PbduNEDK9k7mYaqWDzFFNPpyzulzvnPpThRFqs7q
3Jzot1mRLeNcT0yyrrJ6o7+v4qW5L6tbPSsrfXyTTU5fqm90PJ1W5u5EH9eZ
TRbRkl+LrLym0jIp4MUTnVbxrI4yU8+iB9pGg4GCHm0dF+nPcV4W8FZdrY1S
2aqir7YeDQbPByMVVyY+0RdFbarC1Op+fiIz0j/CDLNirn+oyvVK3d43raIz
nIFK4voExkiVSsoUWp7otY1im2SZWmUn+qe6THralrO6MjML3zZL/PJBqXhd
L8rqRGn6RPKv1llhgVx9/bd1AgtK/O+87Ldxntl462FZzXFmVRb7n8wyzvIT
vaQX+nf8wl8zbNOfVb6ZhYkZWMJIv1sbPcmWQCd9MZv5BgmQ8kRfx1Vmm9/K
FOby9GgwHAW/rYu6gqbA2SIxu9f1qs9DdFb1qiziehEXnYe0qjdZYeJK35hk
UZR5Od90V/iLxZf+mlO7flIut9b2ZPT8+UCP87u4itMyusxyY/W7Mk57erLO
aqOfDwed9b4vsrLQp/C9p0/HnYU/Pzx69nR74e8n492rft3X15kFseks+zXQ
tPuE1gyj35nK4j4pZ/oUWAibpMhi/cJUtyY3WzRYUSd/NSax/am06Zt0vUWK
o+FIn5bVRr+M87yzZtf5zhU/HQ12r1gVZbWMa5jwiYIW774/HQ2Hz0/469PR
0ch9HRzSrxfRWZ+2bVJaEy3tvPNjZaJy+otJar+Rod+smHVHeXp0dChdHz99
euS+Pjl8Kl+Pnh27aRyOngzdNJ6Ohq0R29pj16PjulxFq6qErVzubACkh9dJ
ON1ja3JQO6aK4sTwSk2SLgw9Pj8/fzYYDY8Oo9FgeMQaQNTkHj7UkzrV0KI/
POpzG/gFeourlJTlm/I+eheD2P6YVcAvCzIEwgJbKNdjUGT60tSoWK3e//F6
fGkP9miEtr4hueTRbNj3hSM0SH+z5biHFMYERQHzUUpFUQTKGsQqTmqlbhYg
yaSSdWpsUmVT2GH1wmghq15CX3GR2aXVlfnHGiae6rrUdr1alVWtidUG2JzV
GbROymKWzdcVzyMrdAzd3mWJ0VOD2jhOU34/dnq64DX3YSZGz0voAzZOjbPq
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
4WhwNPjSjA5HNJjqEHl07In8v2TLCamVawAA

-->

</rfc>


<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7252 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml">
<!ENTITY RFC7049 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml">
<!ENTITY I-D.ietf-cose-msg SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-cose-msg.xml">
<!ENTITY I-D.ietf-core-object-security SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-object-security.xml">
<!ENTITY RFC7554 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7554.xml">
<!ENTITY RFC6775 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC6347 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC5869 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5869.xml">
<!ENTITY RFC4231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4231.xml">
<!ENTITY RFC7721 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7721.xml">
<!ENTITY I-D.ietf-6tisch-minimal SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-minimal.xml">
<!ENTITY I-D.ietf-6tisch-dtsecurity-secure-join SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-dtsecurity-secure-join.xml">
<!ENTITY I-D.ietf-6tisch-6top-protocol SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-6top-protocol.xml">
<!ENTITY I-D.ietf-6tisch-terminology SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-terminology.xml">
<!ENTITY I-D.selander-ace-cose-ecdhe SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.selander-ace-cose-ecdhe.xml">
<!ENTITY I-D.ietf-anima-bootstrapping-keyinfra SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-bootstrapping-keyinfra.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc tocdepth="2"?>

<rfc ipr="trust200902" docName="draft-ietf-6tisch-minimal-security-02" category="std">

  <front>
    <title>Minimal Security Framework for 6TiSCH</title>

    <author initials="M." surname="Vucinic" fullname="Malisa Vucinic">
      <organization>Inria</organization>
      <address>
        <postal>
          <street>2 Rue Simone Iff</street>
          <city>Paris</city>
          <code>75012</code>
          <country>France</country>
        </postal>
        <email>malisa.vucinic@inria.fr</email>
      </address>
    </author>
    <author initials="J." surname="Simon" fullname="Jonathan Simon">
      <organization>Linear Technology</organization>
      <address>
        <postal>
          <street>32990 Alvarado-Niles Road, Suite 910</street>
          <city>Union City, CA</city>
          <code>94587</code>
          <country>USA</country>
        </postal>
        <email>jsimon@linear.com</email>
      </address>
    </author>
    <author initials="K." surname="Pister" fullname="Kris Pister">
      <organization>University of California Berkeley</organization>
      <address>
        <postal>
          <street>512 Cory Hall</street>
          <city>Berkeley, CA</city>
          <code>94720</code>
          <country>USA</country>
        </postal>
        <email>pister@eecs.berkeley.edu</email>
      </address>
    </author>

    <date year="2017" month="February" day="10"/>

    <area>Internet</area>
    <workgroup>6TiSCH Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This draft describes the minimal mechanisms required to support secure
initial configuration of a pledge, a device being added to a 6TiSCH network.
The goal of this configuration is to set link-layer keys, and to establish a
secure session between each pledge and the join registrar who may use that to
further configure the pledge.
Additional security behaviors and mechanisms may be added on top of this minimal framework.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>When a previously unknown device seeks admission to a 6TiSCH
<xref target="RFC7554"/> network (to "join"), it first needs to synchronize to the
network.  The device or pledge then configures its IPv6 address and
authenticates itself, and also validates that it is joining the right
network.  At this point it can expect to interact with the network to
configure its link-layer keying material.  Only then may the node
establish an end-to-end secure session with an Internet host using
DTLS <xref target="RFC6347"/> or OSCOAP <xref target="I-D.ietf-core-object-security"/>.  Once the
application requirements are known, the node interacts with its
peers to request additional resources as needed, or to be
reconfigured as the network changes <xref target="I-D.ietf-6tisch-6top-protocol"/>.</t>

<t>This document describes the mechanisms comprising a minimal feature
set for a pledge to join a 6TiSCH network, up to the point where it
can establish a secure session with an Internet host.</t>

<t>It presumes a network as described by <xref target="RFC7554"/>,
<xref target="I-D.ietf-6tisch-6top-protocol"/>, and <xref target="I-D.ietf-6tisch-terminology"/>.
It assumes the pledge pre-configured with either a:</t>

<t><list style="symbols">
  <t>pre-shared key (PSK),</t>
  <t>raw public key (RPK),</t>
  <t>or a locally-valid certificate and a trust anchor.</t>
</list></t>

<t>As the outcome of the join process, the pledge expects one or
more link-layer key(s) and optionally a temporary network identifier.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>. These words
may also appear in this document in lowercase, absent their normative meanings.</t>

<t>The reader is expected to be familiar with the terms and concepts defined in
<xref target="I-D.ietf-6tisch-terminology"/>, <xref target="RFC7252"/>,
<xref target="I-D.ietf-core-object-security"/>, and <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.
The following terms are imported: pledge, join proxy, join registrar/coordinator, 
drop ship, imprint, enrollment, ownership voucher.</t>

<t><list style="hanging">
  <t hangText='Pledge:'>
  the prospective device, which has the identity provided to
at the factory.  Neither the device nor the network knows if the
device yet knows if this device belongs with this network.</t>
  <t hangText='Joined Node:'>
  the prospective device, after having completed the join process, often just called a Node.</t>
  <t hangText='Join Proxy (JP):'>
  a stateless relay that provides connectivity between the pledge
and the join registrar/coordinator.</t>
  <t hangText='Join Registrar/Coordinator (JRC):'>
  central entity responsible for authentication and authorization of joining nodes.</t>
</list></t>

</section>
<section anchor="join-overview" title="Join Overview">

<t>This section describes the steps taken by a pledge in a 6TiSCH network.
When a previously unknown device seeks admission to
a 6TiSCH <xref target="RFC7554"/> network, the following exchange occurs:</t>

<t><list style="numbers">
  <t>The pledge listens for an Enhanced Beacon (EB) frame
   <xref target="IEEE8021542015"/>.  This frame provides network synchronization
   information, and tells the device when it can send a frame to the
   node sending the beacons, which plays the role of Join Proxy
   (JP) for the pledge, and when it can expect to receive a frame.</t>
  <t>The pledge configures its link-local IPv6 address and advertizes it to Join Proxy (JP).</t>
  <t>The pledge sends packets to JP in order to securely identify itself to the network.
These packets are directed to the Join Registrar/Coordinator  (JRC),
which may be co-located on the JP or another device.</t>
  <t>The pledge receives one or more packets from JRC (via the JP) that sets
up one or more link-layer keys used to authenticate subsequent
transmissions to peers.</t>
</list></t>

<t>From the pledge's perspective, minimal joining is a local phenomenon &#8211;
the pledge only interacts with the JP, and it need not know how far it is
from the DAG root, or how to route to the JRC.
Only after establishing one or more link-layer keys does it need to know
about the particulars of a 6TiSCH network.</t>

<t>The handshake is shown as a transaction diagram in <xref target="fig_sequence-diagram"/>:</t>

<figure title="Overview of the join protocol." anchor="fig_sequence-diagram"><artwork align="center"><![CDATA[
+--------+                 +-------+                   +--------+
| pledge |                 |  JP   |                   |  JRC   |
|        |                 |       |                   |        |
+--------+                 +-------+                   +--------+
    |                          |                            | 
    |<----ENH BEACON (1)-------|                            |
    |                          |                            |
    |<-Neighbor Discovery (2)->|                            |  
    |                          |                            |
    |<---Sec. Handshake (3)----|--Security Handshake (3a)-->|
    |                          |                            |
    |-----Join request (4)-----|--------Join request (4a)-->|
    |                          |                            |
    |<---Join response (5)-----|-------Join response (5a)---|
    |                          |                            |

]]></artwork></figure>

<t>The details of each step are described in the following sections.</t>

<section anchor="step-1-enhanced-beacon" title="Step 1 - Enhanced Beacon">

<t>The pledge hears an EB from the JP and synchronizes itself to the joining
schedule using the cells contained in the EB.
At this point the pledge MAY proceed to step 2, or continue to listen for additional EBs.
If more than one EB is heard, the pledge MAY use a metric based on DAG rank
and received signal level of the EB, or other factors to decide which JP to
use for the security handshake in step 3.
Details on how a pledge chooses the JP are out of scope of this specification.</t>

</section>
<section anchor="step-2-neighbor-discovery" title="Step 2 - Neighbor Discovery">

<t>At this point, pledge forms its link-local IPv6 address based on EUI64
and MAY further follow the Neighbor Discovery (ND) process described
in Section 5 of <xref target="RFC6775"></xref>.</t>

</section>
<section anchor="step-3-security-handshake" title="Step 3 - Security Handshake">

<t>The security handshake between pledge and JRC uses Ephemeral
Diffie-Hellman over COSE (EDHOC) <xref target="I-D.selander-ace-cose-ecdhe"/>
to establish the shared session secret used to encrypt the join request and
join response.</t>

<t>The security handshake step is OPTIONAL in case PSKs are used, while it is
REQUIRED for RPKs and certificates. When using certificates, the process
outlined in <xref target="I-D.ietf-6tisch-dtsecurity-secure-join"/> would be followed, and
once complete, the process would continue here with a locally relevant
security credential, or an established shared secret.</t>

<t>In case the handshake step is omitted, the shared secret used for protection
of the join request and join response in the next step is the PSK.</t>

<t>A consequence is that if the long-term PSK is
compromised, keying material transferred as part of the join response
is compromised as well.
Physical compromise of the pledge, however, would also imply the compromise
of the same keying material, as it is likely to be found in node's memory.</t>

<section anchor="pre-shared-symmetric-key" title="Pre-Shared Symmetric Key">

<t>The Diffie-Hellman key exchange and the use of EDHOC is optional,
when using a pre-shared symmetric key.
This cuts down on traffic between JRC and pledge, but requires
pre-configuration (one-touch) of the shared key on both devices.</t>

<t>It is REQUIRED to use unique PSKs for each pledge.  If there are multiple
JRC's in the network (such as for redundancy), they would have to share a
database of PSKs.</t>

</section>
<section anchor="asymmetric-keys" title="Asymmetric Keys">

<t>The Security Handshake step is required, when using asymmetric keys.
Before conducting the Diffie-Hellman key exchange using EDHOC <xref target="I-D.selander-ace-cose-ecdhe"/>
the pledge and JRC need to receive and validate each other's public key certificate.
When RPKs are pre-configured at pledge and JRC, they can directly proceed to the handshake.</t>

</section>
</section>
<section anchor="step-4-join-request" title="Step 4 - Join Request">

<t>The join request is sent from the pledge to the JP using the shared slot as
described in the EB, and forwarded to the JRC. Which slot the JP uses to
transmit to the JRC is out of scope: some networks may wish to dedicate
specific slots for this join traffic.</t>

<t>The join request is authenticated/encrypted end-to-end using AES-CCM-
16-64-128 algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from
the shared secret from step 3.
The nonce is derived from the shared secret, the pledge's EUI64 and a
monotonically increasing counter initialized to 0 when first starting.</t>

</section>
<section anchor="step-5-join-response" title="Step 5 - Join Response">

<t>The join response is sent from the JRC to the pledge through JP that serves as a stateless relay.
Packet containing the join response travels on the path from JRC to JP using
pre-established routes in the network.
The JP delivers it to the pledge using the slot information from the EB.
JP operates as the application-layer proxy and does not keep
any state to relay the message. It uses information sent in the
clear within the join response to decide where to forward to.</t>

<t>The join response is authenticated/encrypted using AES-CCM-16-64-128
algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from the shared
secret from step 3.</t>

<t>The nonce is derived from the shared secret, pledge's EUI64 and a
monotonically increasing counter matching that of the join request.</t>

<t>The join response contains one or more (per-peer) link-layer key(s) K2 that
the pledge will use for subsequent communication. Each K2 that is provided by the
JRC is associated with an 802.15.4 keyid. In other link-layer technologies,
a different identifier may be substituted.
It optionally also contains an IEEE 802.15.4 short-address
<xref target="IEEE8021542015"/> assigned to pledge by JRC.</t>

</section>
</section>
<section anchor="protocol-specification" title="Protocol Specification">

<t>The join protocol in <xref target="fig_sequence-diagram"/> is implemented over Constrained
Application Protocol (CoAP) <xref target="RFC7252"/>.
The Pledge plays the role of a CoAP client, JRC the role of a CoAP server,
while JP implements CoAP forward proxy functionality <xref target="RFC7252"/>
Since JP is also likely a constrained device, it does not need to implement a
cache but rather process forwarding-related CoAP options and make requests on
behalf of pledge that is not yet part of the network.</t>

<t>Pledge and JRC MUST protect their exchange end-to-end (i.e. through the
proxy) using Object Security of CoAP (OSCOAP)
<xref target="I-D.ietf-core-object-security"/>.</t>

<section anchor="transaction-diagrams" title="Transaction Diagrams">

<section anchor="case-of-pre-shared-symmetric-key" title="Case of Pre-Shared Symmetric Key">

<t><xref target="fig_exchange-symmetric"/> shows the exchanges that take place in case pre-shared
symmetric key is used. Messages join_request and join_response are specified in
<xref target="join_request"/> and <xref target="join_response"/>. These messages are protected by OSCOAP,
using PSK as the shared secret.</t>

<figure title="Transaction diagram in case of symmetric keys." anchor="fig_exchange-symmetric"><artwork align="center"><![CDATA[
+--------+                       +--------+
| pledge |                       |  JRC   |
|        |                       |        |
+--------+                       +--------+
    |                                 |
    |           join_request          |
    +-------------------------------->|
    |                                 |
    |          join_response          |
    |<--------------------------------+
    |                                 |   

]]></artwork></figure>

</section>
<section anchor="case-of-asymmetric-keys" title="Case of Asymmetric Keys">

<t><xref target="fig_exchange-asymmetric"/> details the exchanges between the pledge and JRC that
take place during the execution of the join protocol in case asymmetric keys
are used. Format of EDHOC messages is specified in <xref target="I-D.selander-ace-cose-ecdhe"/>.</t>

<figure title="Transaction diagram in case of asymmetric keys." anchor="fig_exchange-asymmetric"><artwork align="center"><![CDATA[
+--------+                       +--------+
| pledge |                       |  JRC   |
|        |                       |        |
+--------+                       +--------+
    |        EDHOC_message_1          |
    +-------------------------------->|
    |                                 |
    |        EDHOC_message_2          |
    |<--------------------------------+
    |                                 |
    |  EDHOC_message_3 + join_request |
    +-------------------------------->|
    |                                 |
    |          join_response          |
    |<--------------------------------+
    |                                 |   

]]></artwork></figure>

</section>
</section>
<section anchor="proxy-operation-of-join-proxy-jp" title="Proxy Operation of Join Proxy (JP)">

<t>The pledge designates a JP as a proxy by including in the CoAP requests to
the JP the Proxy-Scheme option with value "coap" (CoAP-to-CoAP proxy).
The pledge MUST include the Uri-Host option with its value set to the
well-known JRC's alias - "6tisch.arpa".
The pledge does not need to learn the actual IPv6 address of JRC at any time
during the join protocol.  The JP knows the address of the JRC, via a
provisioning process that occured when the JP, acting as a pledge, joined.
The initial bootstrap of the DODAG root would require explicit provisioning
of the JRC address.</t>

<t>Note that the CoAP proxy by default keeps state information in order
to forward the response towards the originator of the request.  This
state information comprises CoAP token, but the implementations also
need to keep track of the IPv6 address of the host, as well as the
corresponding UDP source port number.  In the setting where the proxy
is a constrained device, as in the case of JP, this makes it prone to
Denial of Service (DoS) attacks, due to the limited memory.</t>

<t>In order to facilitate a stateless implementation of join proxying, the
pledge shall encode in the CoAP message the information necessary for the JP
to send the response back - "origin_info".
For this purpose, the pledge uses the "Context Identifier (Cid)" parameter of
OSCOAP's security context structure.
Context Identifier is sent in clear, readable by JP, and MUST be echoed back
in the response from JRC.
This makes it possible to implement JP's CoAP proxy in a stateless manner.
It also allows JRC to look up the right security context for communication with a given pledge.</t>

<section anchor="implementation-of-origininfo" title="Implementation of origin_info">

<t>The origin_info is implemented as a CBOR <xref target="RFC7049"/> array object
containing:</t>

<t><list style="symbols">
  <t>EUI64: pledge's EUI64 address</t>
  <t>source_port: pledge's UDP source port (EDNOTE/XXX: Can we fix the source port?)</t>
  <t>token: pledge's CoAP token (EDNOTE: is there a way to get rid of token?)</t>
</list></t>

<figure><artwork><![CDATA[
origin_info = [
    EUI64 : bstr,
    source_port : uint,
    token : uint
]
]]></artwork></figure>

</section>
</section>
<section anchor="oscoap-security-context-instantiation" title="OSCOAP Security Context Instantiation">

<t>The OSCOAP security context MUST be derived at pledge and JRC as per Section
3.2 of <xref target="I-D.ietf-core-object-security"/> using HKDF <xref target="RFC5869"/> as the key
derivation function.</t>

<t><list style="symbols">
  <t>Context Identifier (Cid) MUST be the origin_info object wrapped as a byte
    string (bstr).  This context information is included in the derivation
    of the shared secret, so while visible, it is protected.</t>
  <t>Algorithm MUST be set to AES-CCM-16-64-128 from
    <xref target="I-D.ietf-cose-msg"/>.  CoAP messages are therefore protected with
    an 8-byte CCM authentication tag and the algorithm uses 13-byte
    long nonces.</t>
  <t>Base key (base_key) MUST be the secret generated by the run of
    EDHOC, or the PSK in case EDHOC step was omitted.</t>
  <t>Sender ID of pledge MUST be set to 0x00, while the ID of JRC MUST be set to 0x01.</t>
</list></t>

<t>The hash algorithm that instantiates HKDF MUST be SHA-256 <xref target="RFC4231"></xref>.
The derivation in <xref target="I-D.ietf-core-object-security"/> results in traffic
keys and static IVs for each side of the conversation.  Nonces are
constructed by XOR'ing the static IV with current sequence number.
The context derivation process occurs exactly once.</t>

<t>Implementations MUST ensure that multiple CoAP requests to different JRCs
result in the use of the same OSCOAP context so that sequence numbers are
properly incremented for each request.
This may happen in a scenario where there are multiple 6TiSCH networks
present and the pledge tries to join one network at a time.</t>

</section>
<section anchor="join_request" title="Implementation of join_request">

<t>Message join_request SHALL be mapped to a CoAP request:</t>

<t><list style="symbols">
  <t>The request method is GET.</t>
  <t>The Proxy-Scheme option is set to "coap".</t>
  <t>The Uri-Host option is set to "6tisch.arpa".</t>
  <t>The Uri-Path option is set to "j".</t>
  <t>The object security option SHALL be set according to
<xref target="I-D.ietf-core-object-security"/> and OSCOAP parameters set as
described above.</t>
</list></t>

</section>
<section anchor="join_response" title="Implementation of join_response">

<t>If OSCOAP processing is a success, messsage join_response SHALL be mapped to
a CoAP response:</t>

<t><list style="symbols">
  <t>The response Code is 2.05 (Content).</t>
  <t>The payload is a CBOR array containing, in order:
  <list style="symbols">
      <t>COSE Key Set <xref target="I-D.ietf-cose-msg"/>.  Each key in the Key Set
SHALL be a symmetric key.  A key that is present in the Key Set
  and does not have an identifier is assumed to be "K2" link-
  layer key from <xref target="I-D.ietf-6tisch-minimal"/>.  Parameter "kid" of
  the COSE Key structure SHALL be used to denote pair-wise keys
  if present, where the value SHALL be set to the address of the
  corresponding peer.</t>
      <t>Optional byte string representing IEEE 802.15.4 short address
  assigned to pledge.  The short-address includes a lease time.  It is
  used for configuring both L2 short addresses and L3 short
  addresses.</t>
    </list></t>
</list></t>

<figure><artwork><![CDATA[
payload = [
    COSE_KeySet,
    ? short_address : bstr,
]
]]></artwork></figure>

<t>In case JRC determines that pledge is not supposed to join the network
(e.g. by failing to find an appropriate security context), it should respond
with a 4.01 Unauthorized error.
Upon reception of a 4.01 Unauthorized, the pledge SHALL attempt to join the
next advertised 6TiSCH network.
If all join attempts have failed at pledge, the pledge SHOULD signal to the
user by an out-of-band mechanism the presence of an error condition.</t>

</section>
</section>
<section anchor="link-layer-requirements" title="Link-layer requirements">

<t>All frames in a 6TiSCH network MUST use link-layer frame security.
The frame security options MUST include frame authentication, and MAY
include frame encryption.</t>

<t>Link-layer frames are protected with a 16-byte key, and a 13-byte nonce
constructed
from current Absolute Slot Number (ASN) and the source (the JP for
EBs) address, as shown in <xref target="fig_ccm-nonce"/>:</t>

<figure title="Link-layer CCM* nonce construction" anchor="fig_ccm-nonce"><artwork align="center"><![CDATA[
+-------------------------------------------+
|  Address (8B or 00-padded 2B) | ASN (5B)  |
+-------------------------------------------+
]]></artwork></figure>

<t>The pledge does not initially do any authentication of the EB frames, as it
does not know the K1 key.  When sending frames, the pledge sends unencrypted
and unauthenticated frames (exempt mode in 802.15.4).  JP accepts these frames
for the duration of the join process. How JP learns whether
the join process is ongoing is out of scope of this specification.</t>

<t>As the EB itself cannot be authenticated by pledge, an attacker may craft a
frame that appears to be a valid EB, since the pledge can neither know the
ASN a priori nor verify the address of the JP.
This permits a Denial of Service (DoS) attack at the pledge.
Beacon authentication keys are discussed in <xref target="I-D.ietf-6tisch-minimal"/>.</t>

</section>
<section anchor="asymmetric-keys-1" title="Asymmetric Keys">

<t>Certificates or pre-configured RPKs may be used to exchange public keys
between the pledge and JRC.
The key pair is generated using elliptic curve secp256r1, and
the certificate containing the public key is signed using ECDSA.  (XXX: would
be nice to move to EdDSA)</t>

<t>The certificate itself may be a compact
representation of an X.509 certificate, or a full X.509 certificate.
Compact representation of X.509 certificates is out of scope of this
specification.  The certificate is signed by a root CA whose
certificate is installed on all nodes participating in a particular
6TiSCH network, allowing each node to validate the certificate of the
JRC or pledge as appropriate.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>In case PSKs are used, this document mandates that the pledge and JRC are
pre-configured with unique keys.
The uniqueness of generated nonces is guaranteed under the assumption of
unique EUI64 identifiers for each pledge.
Note that the address of the JRC does not take part in nonce construction.
Therefore, even should an error occur, and a PSK shared by a group of nodes,
the nonces constructed as part of the different responses are unique.  The
PSK is still important for authentication of the pledge and authentication of
the JRC to the pledge. Should an attacker come to know the PSK, then a
man-in-the-middle attack is possible.  The well known problem with Bluetooth
headsets with a "0000" pin applies here.
The design differentiates between nonces constructed for requests and nonces
constructed for responses by different sender identifiers (0x00 for pledge
and 0x01 for JRC).</t>

<t>Being a stateless relay, JP blindly forwards the join traffic into the network.
While the exchange between pledge and JP takes place over a shared cell, join
traffic is forwarded using dedicated cells on the JP to JRC path.
In case of distributed scheduling, the join traffic may therefore cause
intermediate nodes to request additional bandwidth. (EDNOTE: this is a
problem that needs to be solved)
Because the relay operation of JP is implemented at the application layer, JP
is the only hop on the JP-6LBR path that can distinguish join traffic from
regular IP traffic in the network.
It is therefore recommended to implement stateless rate limiting at JP: a
simple bandwidth (in bytes or packets/second) cap would be appropriate.</t>

<t>The shared nature of the "minimal" cell used for join traffic makes the
network prone to DoS attacks by congesting the JP with bogus radio traffic.
As such an attacker is limited by emitted radio power, redundancy in the
number of deployed JPs alleviates the issue and also gives the pledge a
possibility to use the best available link for join.
How a network node decides to become a JP is out of scope of this specification.</t>

<t>At the time of the join, the pledge has no means of verifying the content in
the EB and has to accept it at "face value".
In case the pledge tries to join an attacker's network, the join response
message in such cases will either fail the security check or time out.
The pledge may implement a blacklist in order to filter out undesired beacons
and try to join the next seemingly valid network.
The blacklist alleviates the issue but is effectively
limited by the node's available memory.
Such bogus beacons will prolong the join time of the pledge and so the time
spent in "minimal" <xref target="I-D.ietf-6tisch-minimal"/> duty cycle mode.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>This specification relies on the uniqueness of EUI64 that is transferred in
clear as part of the security context identifier. (EDNOTE: should we say IID
here?)
Privacy implications of using such long-term identifier are discussed
in <xref target="RFC7721"/> and comprise correlation of activities over time,
location tracking, address scanning and device-specific vulnerability
exploitation.  Since the join protocol is executed rarely compared to
the network lifetime, long-term threats that arise from using EUI64
are minimal.
In addition, the join response message contains an optional short address
which can be assigned by JRC to the pledge.
The short address is independent of the long-term identifier EUI64 and is
encrypted in the response.
For that reason, it is not possible to
correlate the short address with the EUI64 used during the join.  Use
of short addresses once the join protocol completes mitigates the
aforementioned privacy risks.  In addition, EDHOC may be used for
identity protection during the join protocol by generating a random
context identifier in place of the EUI64
<xref target="I-D.selander-ace-cose-ecdhe"/>.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>There is no IANA action required for this document.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The work on this document has been partially supported by the
European Union's H2020 Programme for research, technological
development and demonstration under grant agreement No 644852,
project ARMOUR.</t>

<t>The authors are grateful to Thomas Watteyne and Goeran Selander for
reviewing the draft.  The authors would also like to thank Francesca
Palombini and Ludwig Seitz for participating in the discussions that
have helped shape the document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC7252;
&RFC7049;
&I-D.ietf-cose-msg;
&I-D.ietf-core-object-security;


    </references>

    <references title='Informative References'>

&RFC7554;
&RFC6775;
&RFC6347;
&RFC5869;
&RFC4231;
&RFC7721;
&I-D.ietf-6tisch-minimal;
&I-D.ietf-6tisch-dtsecurity-secure-join;
&I-D.ietf-6tisch-6top-protocol;
&I-D.ietf-6tisch-terminology;
&I-D.selander-ace-cose-ecdhe;
&I-D.ietf-anima-bootstrapping-keyinfra;
<reference anchor="IEEE8021542015" >
  <front>
    <title>IEEE Std 802.15.4-2015 Standard for Low-Rate Wireless Personal Area Networks (WPANs)</title>
    <author initials="." surname="IEEE standard for Information Technology">
      <organization></organization>
    </author>
    <date year="2015"/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t><xref target="fig_example-psk"/> illustrates a join protocol exchange in case PSKs are used.
Pledge instantiates the OSCOAP context and derives the traffic keys and
nonces from the PSK.  It uses the instantiated context to protect the
CoAP request addressed with Proxy-Scheme option and well-known host
name of JRC in the Uri-Host option.  The example assumes a JP that is
already aware of JRC's IPv6 address and does not need to resolve the
well-known "6tisch.arpa" host name.  Triggered by the presence of
Proxy-Scheme option, JP forwards the request to the JRC.  Once JRC
receives the request, it looks up the correct context based on the
context identifier (cid) field.  It reconstructs OSCOAP's external
Additional Authenticated Data (AAD) needed for verification based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"/></t>
  <t>Request URI reconstructed following
    <xref target="I-D.ietf-core-object-security"/>.</t>
</list></t>

<t>Replay protection is ensured by OSCOAP and the tracking of sequence
numbers at each side.  In the example below, the response contains
sequence number 7 meaning that there have already been some attempts
to join under a given context, not coming from the pledge.  Once JP
receives the response, it looks up and decodes the cid field in order
to decide where to forward it.  JP constructs the CoAP response to pledge
by setting the CoAP token to the value decoded from cid and
constructs the link-local IPv6 address of pledge from the EUI64 address
found in the cid.  Note that JP does not posses the key to decrypt
the COSE object present in the payload so the join_response object is
opaque to it.  The response is matched to the request and verified
for replay protection at pledge using OSCOAP processing rules.  Namely,
to verify the response pledge reconstructs the AAD based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"/>.</t>
  <t>Transaction identifier (Tid) of the corresponding CoAP request.
    Tid contains the context identifier (origin_info object), Sender
    ID (0x00 for pledge), and Sender Sequence number (set to 1 in the
    example).</t>
</list></t>

<t>In addition to AAD, pledge also uses the explicit, protected fields in
the COSE message, present in the payload of the response.  For more
details, see <xref target="I-D.ietf-core-object-security"/> and <xref target="I-D.ietf-cose-msg"/>.</t>

<figure title="Example of a join protocol exchange with a PSK. {} denotes encryption and authentication, [] denotes authentication." anchor="fig_example-psk"><artwork align="center"><![CDATA[
<--E2E OSCOAP-->
Client  Proxy Server
Pledge   JP    JRC
  |      |      |
  +----->|      |            Code: [0.01] (GET)
  | GET  |      |           Token: 0x8c
  |      |      |    Proxy-Scheme: [coap]
  |      |      |        Uri-Host: [6tisch.arpa]
  |      |      | Object-Security: [cid:origin_info, seq:1,
  |      |      |                   {Uri-Path:"j"},
  |      |      |                   <Tag>]
  |      |      |         Payload: -
  |      |      |
  |      +----->|            Code: [0.01] (GET)
  |      | GET  |           Token: 0x7b
  |      |      |        Uri-Host: [6tisch.arpa]
  |      |      | Object-Security: [cid:origin_info, seq:1,
  |      |      |                   {Uri-Path:"j"},
  |      |      |                   <Tag>]
  |      |      |         Payload: -
  |      |      |
  |      |<-----+            Code: [2.05] (Content)
  |      | 2.05 |           Token: 0x7b
  |      |      | Object-Security: -
  |      |      |         Payload: [cid: origin_info, seq:7,
  |      |      |                   {join_response}, <Tag>]
  |      |      |
  |<-----+      |            Code: [2.05] (Content)
  | 2.05 |      |           Token: 0x8c
  |      |      | Object-Security: -
  |      |      |         Payload: [cid: origin_info, seq:7,
  |      |      |                   {join_response}, <Tag>]
  |      |      |
]]></artwork></figure>

<t>Where origin_info and join_response are as follows.</t>

<figure><artwork><![CDATA[
origin_info:
[
    h'00170d00060d9f0e', / Pledge's EUI64 /
    49152, / Pledge's UDP source port /
    0x8c   / Pledge's CoAP token /
]
]]></artwork></figure>

<t>Encodes to h'834800170d00060d9f0e19c000188c' with a size of 15 bytes.</t>

<figure><artwork><![CDATA[
join_response:
[
    [   / COSE Key Set array with a single key /
        {
            1:4, / key type symmetric /
            -1:h'e6bf4287c2d7618d6a9687445ffd33e6' / key value /
        }
    ],
    h'af93' / assigned short address /
]
]]></artwork></figure>

<t>Encodes to h'8281a201042050e6bf4287c2d7618d6a9687445ffd33e642af93'
with a size of 26 bytes.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIALD2nVgAA+0923LbRpbv/RVd8oOlCUFTtCTbqkxmaEmJFduSVpQn2cqm
XE2gSSICAQ4ASuYk3tp/2D/cL9lz60YDpGzvTrZqb3xIaKLRl3O/tqIoUnVa
Z/ZYv03zdGEyPbbxqkzrtf62NAt7X5S3elqU+ugmHZ+8Uo+0mUxKe3esj+q0
iufRgl+LKnlNJUWcw4vHOinNtI5SW0+jB8ZGg6GCGava5Ml7kxU5vFWXK6tU
uizpa1UPB4MXMMyU1hzr87y2ZW5rdT87lh3pH2CHaT7T35XFaqlu75tR0Snu
QMWmPoY1EqXiIoGRx3pVRaaK01Qt02OldV3Ex3ptK/haFWVd2mnl/71ehP+E
kYld1vNjDRs3q3pelDgBfiL5v9ZpDuPf9vVfVjGcN/a/M1TemiytzMbDopzh
xsvU+J/swqTZsV7QC/07fuHPKY7pT0s/rIINWzjhUF+vrB6nCwCjPp9O/YAY
IH2sr0yZVs1vRQJ7eXY42B8Gv63yuoShgPg8ttvP9X2fl+ic6vsiN/Xc5J2H
dKo3aW5NqW9sPM+LrJituyf8pcKX/pzRuH5cLDbO9nT44sVAj7I7U5qkiC7S
zFb6ujBJT49XaW31i/1B57zv8rTI9Ql87+mTUefgLw4Onz/bPPi78Wj7qV/3
9VVaAVV1jv0aYNp9QmeG1e9sWSEbFVN9AigEHspTo1/a8tZmdgMGS5rkz9bG
VX8iY/o2WW2A4nB/qE+Kcq1fmSzrnNlNvvXEz4aD7SdWeVEuTA0bPlYw4vrb
k+H+/otj/vpseDh0XwcH9Ot5dNonro6LykaLatb5sbRRMfnFxrXnc5g3zafN
Kjzd4eGBfD169uzQfX168Ey+Hj4/crs4GD7dd689G+63FmzLlm2PktoLHPpi
o1+KNN828qgultGyLIDPi61TAY5gIaJi97iyGYgvW0YmtgwSGydz23rb4N6i
SVHUgEazXIIUim7tGoBSGhp4dnb2fDDcPzwYDvYPWaSIWN7BZ3pcJxoG9PcP
+wcRjoFfYFVTJiSc3xT30bUBPvghLYEAKiBKoD7gyUyPQHDqC1ujIK/07g9X
o4tqb4dWaAswInRerQrnPneYA3ZqeJhnSGBNkDywH6VUFEWgHPCAca3UzRxY
g1SATmwVl+kEWLaeWy2I0guYC+BSLSpd2r+uYOMJyFddrZZLEMKaMQV0k9Yp
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
cpvKK8hicAzlgsxlSslnNrHQwPPtljWWdKcLSaRvatuWi/3ro1YsVCmJqrZH
cXsfEOmCpSI1VocQJ0V705jhWJE4LxIUW9+d3fTl4TY/kCwi4hx2A93Yrm8X
jGu7bM3wK8yXbg7/xQ8S2e4Vl4z1p8M3TBxTZ8WMW8o+z3CIGCEfbyLy4ga7
IZoqAzMp7j6HFDHuPFYkGK2wKNQtwgzjmxuqVczNYii/Q9TJXJu4Ux53PCRA
nrxzQlZ5pYf9wSH65UDieb3nwLg066wwCS9PphibX43d1fPeHN/z8AfNpYiv
QbiPATIP6SHKAlKQn9lUxrvuIH8U06lh0npErzXZQxtkkLvT6HaSmkp/QKGl
LTOdu4ldY+fO6+EOJxSbSXzmcyMn3L4chE525b2Hnds02Wn0leaeRw8e7z80
p3UVl7A/9K+XJi2j+5R1ZXO5DhbXybl7gQPJoZAWiYuL13Zfm3naLiumevsO
iZeSCyWLyNlCpZVl8R9bMqLe1G7Av5EHlZBIK4Pq7Cfq4LFU3YhSTWuqF2tm
8yWMrgIJ90ElZm+G7R1YVoNvnvLPwYbc804Y2VG6M7cRS+8BS0BMbFX/iWd6
77bsLPGOge3KM9FeSCz3+Lrcl+tKZGKki0gE31z302QN1a7tz/qof6cG/G8S
UeCDYAlAjvUYoJfKlHqpOpY5324BO+WwDuFWiYN20B/s63e567zEmqGyxL71
d0u6RgF7lv3lJxuDW140E5mpsRW9Dg+gqEhUOuzwcN32JJBuGA7gawr4/Yr5
Ek8auhKdBam9XOraJdQH5FBSv2eOFVhRMY0mratKJKyCFBtzJDXnI1P9XSqe
g3qEN0i5+oHwNgmlRplcZVJt6yVlGwUNjKAAgfslHV6k8br1m08yt6KcPKZt
X0uMYPSPqj1Kqlh4/286a3fTl4J98BKIlW/x+iauXxETne3y0PDjPjdn340m
VZFha9sYK4cuyD7Su6PxxZ43VcQt3pVIMLCoOnuJdxcws1D0itvQfEFDHC8i
WvjhNrMv+GBOR4+EJXefv0RvYDCIlnw5zfDlnv5Nw0717iF8DTM1XzT3tji+
37eL3gfwBw/pD1Lg46EJSNrRn2+c6YaiJXgLtmdSUJy543n5pg5BupQkq6Yg
K5eGhtf7ojipkNN17bq3Ah7jNtdV7mukqE1ilbcqqByN7doPxPsLieo5RYCe
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

-->

</rfc>


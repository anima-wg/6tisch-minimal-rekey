<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7252 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml">
<!ENTITY RFC7049 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml">
<!ENTITY I-D.ietf-cose-msg SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-cose-msg.xml">
<!ENTITY I-D.ietf-core-object-security SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-object-security.xml">
<!ENTITY RFC7554 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7554.xml">
<!ENTITY RFC6775 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC6347 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC5869 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5869.xml">
<!ENTITY RFC4231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4231.xml">
<!ENTITY RFC7721 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7721.xml">
<!ENTITY I-D.ietf-6tisch-minimal SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-minimal.xml">
<!ENTITY I-D.ietf-6tisch-dtsecurity-secure-join SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-dtsecurity-secure-join.xml">
<!ENTITY I-D.ietf-6tisch-6top-protocol SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-6top-protocol.xml">
<!ENTITY I-D.ietf-6tisch-terminology SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-terminology.xml">
<!ENTITY I-D.selander-ace-cose-ecdhe SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.selander-ace-cose-ecdhe.xml">
<!ENTITY I-D.ietf-anima-bootstrapping-keyinfra SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-bootstrapping-keyinfra.xml">
]>

<?rfc toc="yes"?>
<?rfc softrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-6tisch-minimal-security-01" category="std">

  <front>
    <title>Minimal Security Framework for 6TiSCH</title>

    <author initials="M." surname="Vucinic" fullname="Malisa Vucinic">
      <organization>Inria</organization>
      <address>
        <postal>
          <street>2 Rue Simone Iff</street>
          <city>Paris</city>
          <code>75012</code>
          <country>France</country>
        </postal>
        <email>malisa.vucinic@inria.fr</email>
      </address>
    </author>
    <author initials="J." surname="Simon" fullname="Jonathan Simon">
      <organization>Linear Technology</organization>
      <address>
        <postal>
          <street>32990 Alvarado-Niles Road, Suite 910</street>
          <city>Union City, CA</city>
          <code>94587</code>
          <country>USA</country>
        </postal>
        <email>jsimon@linear.com</email>
      </address>
    </author>
    <author initials="K." surname="Pister" fullname="Kris Pister">
      <organization>University of California Berkeley</organization>
      <address>
        <postal>
          <street>512 Cory Hall</street>
          <city>Berkeley, CA</city>
          <code>94720</code>
          <country>USA</country>
        </postal>
        <email>pister@eecs.berkeley.edu</email>
      </address>
    </author>

    <date year="2017" month="February" day="10"/>

    <area>Internet</area>
    <workgroup>6TiSCH Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This draft describes the minimal mechanisms required to support secure
initial configuration of a pledge, a device being added to a 6TiSCH network.
The goal of this configuration is to set link-layer keys, and to establish a
secure session between each pledge and the join registrar who may use that to
further configure the pledge.
Additional security behaviors and mechanisms may be added on top of this minimal framework.</t>



    </abstract>


  </front>

  <middle>


<section anchor="problems" title="Introduction">

<t>When a previously unknown device seeks admission to a 6TiSCH
<xref target="RFC7554"/> network (to "join"), it first needs to synchronize to the
network.  The device or pledge then configures its IPv6 address and
authenticates itself, and also validates that it is joining the right
network.  At this point it can expect to interact with the network to
configure its link-layer keying material.  Only then may the node
establish an end-to-end secure session with an Internet host using
DTLS <xref target="RFC6347"/> or OSCOAP <xref target="I-D.ietf-core-object-security"/>.  Once the
application requirements are known, the node interacts with its
peers to request additional resources as needed, or to be
reconfigured as the network changes <xref target="I-D.ietf-6tisch-6top-protocol"/>.</t>

<t>This document describes the mechanisms comprising a minimal feature
set for a pledge to join a 6TiSCH network, up to the point where it
can establish a secure session with an Internet host.</t>

<t>It presumes a network as described by <xref target="RFC7554"/>,
<xref target="I-D.ietf-6tisch-6top-protocol"/>, and <xref target="I-D.ietf-6tisch-terminology"/>.
It assumes the pledge pre-configured with either a:</t>

<t><list style="symbols">
  <t>pre-shared key (PSK),</t>
  <t>raw public key (RPK),</t>
  <t>or a locally-valid certificate and a trust anchor.</t>
</list></t>

<t>As the outcome of the join process, the pledge expects one or
more link-layer key(s) and optionally a temporary network identifier.</t>

</section>
<section anchor="Terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>. These words
may also appear in this document in lowercase, absent their normative meanings.</t>

<t>The reader is expected to be familiar with the terms and concepts defined in
<xref target="I-D.ietf-6tisch-terminology"/>, <xref target="RFC7252"/>,
<xref target="I-D.ietf-core-object-security"/>, and <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.
The following terms are imported: pledge, join proxy, join registrar/coordinator, 
drop ship, imprint, enrollment, ownership voucher.</t>

<t><list style="hanging">
  <t hangText='Pledge:'>
  the prospective device, which has the identity provided to
at the factory.  Neither the device nor the network knows if the
device yet knows if this device belongs with this network.</t>
  <t hangText='Joined Node:'>
  the prospective device, after having completed the join process, often just called a Node.</t>
  <t hangText='Join Proxy (JP):'>
  a stateless relay that provides connectivity between the pledge
and the join registrar/coordinator.</t>
  <t hangText='Join Registrar/Coordinator (JRC):'>
  central entity responsible for authentication and authorization of joining nodes.</t>
</list></t>

</section>
<section anchor="join-overview" title="Join Overview">

<t>This section describes the steps taken by a pledge in a 6TiSCH network.
When a previously unknown device seeks admission to
a 6TiSCH <xref target="RFC7554"/> network, the following exchange occurs:</t>

<t><list style="numbers">
  <t>The pledge listens for an Enhanced Beacon (EB) frame
   <xref target="IEEE8021542015"/>.  This frame provides network synchronization
   information, and tells the device when it can send a frame to the
   node sending the beacons, which plays the role of Join Proxy
   (JP) for the pledge, and when it can expect to receive a frame.</t>
  <t>The pledge configures its link-local IPv6 address and advertizes it to Join Proxy (JP).</t>
  <t>The pledge sends packets to JP in order to securely identify itself to the network.
These packets are directed to the Join Registrar/Coordinator  (JRC),
which may be co-located on the JP or another device.</t>
  <t>The pledge receives one or more packets from JRC (via the JP) that sets
up one or more link-layer keys used to authenticate subsequent
transmissions to peers.</t>
</list></t>

<t>From the pledge's perspective, minimal joining is a local phenomenon &#8211;
the pledge only interacts with the JP, and it need not know how far it is
from the DAG root, or how to route to the JRC.
Only after establishing one or more link-layer keys does it need to know
about the particulars of a 6TiSCH network.</t>

<t>The handshake is shown as a transaction diagram in <xref target="fig_sequence-diagram"/>:</t>

<figure title="Overview of the join protocol." anchor="fig_sequence-diagram"><artwork align="center"><![CDATA[
+--------+                 +-------+                   +--------+
| pledge |                 |  JP   |                   |  JRC   |
|        |                 |       |                   |        |
+--------+                 +-------+                   +--------+
    |                          |                            | 
    |<----ENH BEACON (1)-------|                            |
    |                          |                            |
    |<-Neighbor Discovery (2)->|                            |  
    |                          |                            |
    |<---Sec. Handshake (3)----|--Security Handshake (3a)-->|
    |                          |                            |
    |-----Join request (4)-----|--------Join request (4a)-->|
    |                          |                            |
    |<---Join response (5)-----|-------Join response (5a)---|
    |                          |                            |

]]></artwork></figure>

<t>The details of each step are described in the following sections.</t>

<section anchor="step-1-enhanced-beacon" title="Step 1 - Enhanced Beacon">

<t>The pledge hears an EB from the JP and synchronizes itself to the joining
schedule using the cells contained in the EB.
At this point the pledge MAY proceed to step 2, or continue to listen for additional EBs.
If more than one EB is heard, the pledge MAY use a metric based on DAG rank
and received signal level of the EB, or other factors to decide which JP to
use for the security handshake in step 3.
Details on how a pledge chooses the JP are out of scope of this specification.</t>

</section>
<section anchor="step-2-neighbor-discovery" title="Step 2 - Neighbor Discovery">

<t>At this point, pledge forms its link-local IPv6 address based on EUI64
and MAY further follow the Neighbor Discovery (ND) process described
in Section 5 of <xref target="RFC6775"></xref>.</t>

</section>
<section anchor="step-3-security-handshake" title="Step 3 - Security Handshake">

<t>The security handshake between pledge and JRC uses Ephemeral
Diffie-Hellman over COSE (EDHOC) <xref target="I-D.selander-ace-cose-ecdhe"/>
to establish the shared session secret used to encrypt the join request and
join response.</t>

<t>The security handshake step is OPTIONAL in case PSKs are used, while it is
REQUIRED for RPKs and certificates. When using certificates, the process
outlined in <xref target="I-D.ietf-6tisch-dtsecurity-secure-join"/> would be followed, and
once complete, the process would continue here with a locally relevant
security credential, or an established shared secret.</t>

<t>In case the handshake step is omitted, the shared secret used for protection
of the join request and join response in the next step is the PSK.</t>

<t>A consequence is that if the long-term PSK is
compromised, keying material transferred as part of the join response
is compromised as well.
Physical compromise of the pledge, however, would also imply the compromise
of the same keying material, as it is likely to be found in node's memory.</t>

<section anchor="pre-shared-symmetric-key" title="Pre-Shared Symmetric Key">

<t>The Diffie-Hellman key exchange and the use of EDHOC is optional,
when using a pre-shared symmetric key.
This cuts down on traffic between JRC and pledge, but requires
pre-configuration (one-touch) of the shared key on both devices.</t>

<t>It is REQUIRED to use unique PSKs for each pledge.  If there are multiple
JRC's in the network (such as for redundancy), they would have to share a
database of PSKs.</t>

</section>
<section anchor="asymmetric-keys" title="Asymmetric Keys">

<t>The Security Handshake step is required, when using asymmetric keys.
Before conducting the Diffie-Hellman key exchange using EDHOC <xref target="I-D.selander-ace-cose-ecdhe"/>
the pledge and JRC need to receive and validate each other's public key certificate.
When RPKs are pre-configured at pledge and JRC, they can directly proceed to the handshake.</t>

</section>
</section>
<section anchor="step-4-join-request" title="Step 4 - Join Request">

<t>The join request is sent from the pledge to the JP using the shared slot as
described in the EB, and forwarded to the JRC. Which slot the JP uses to
transmit to the JRC is out of scope: some networks may wish to dedicate
specific slots for this join traffic.</t>

<t>The join request is authenticated/encrypted end-to-end using AES-CCM-
16-64-128 algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from
the shared secret from step 3.
The nonce is derived from the shared secret, the pledge's EUI64 and a
monotonically increasing counter initialized to 0 when first starting.</t>

</section>
<section anchor="step-5-join-response" title="Step 5 - Join Response">

<t>The join response is sent from the JRC to the pledge through JP that serves as a stateless relay.
Packet containing the join response travels on the path from JRC to JP using
pre-established routes in the network.
The JP delivers it to the pledge using the slot information from the EB.
JP operates as the application-layer proxy and does not keep
any state to relay the message. It uses information sent in the
clear within the join response to decide where to forward to.</t>

<t>The join response is authenticated/encrypted using AES-CCM-16-64-128
algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from the shared
secret from step 3.</t>

<t>The nonce is derived from the shared secret, pledge's EUI64 and a
monotonically increasing counter matching that of the join request.</t>

<t>The join response contains one or more (per-peer) link-layer key(s) K2 that
the pledge will use for subsequent communication. Each K2 that is provided by the
JRC is associated with an 802.15.4 keyid. In other link-layer technologies,
a different identifier may be substituted.
It optionally also contains an IEEE 802.15.4 short-address
<xref target="IEEE8021542015"/> assigned to pledge by JRC.</t>

</section>
</section>
<section anchor="protocol-specification" title="Protocol Specification">

<t>The join protocol in <xref target="fig_sequence-diagram"/> is implemented over Constrained
Application Protocol (CoAP) <xref target="RFC7252"/>.
The Pledge plays the role of a CoAP client, JRC the role of a CoAP server,
while JP implements CoAP forward proxy functionality <xref target="RFC7252"/>
Since JP is also likely a constrained device, it does not need to implement a
cache but rather process forwarding-related CoAP options and make requests on
behalf of pledge that is not yet part of the network.</t>

<t>Pledge and JRC MUST protect their exchange end-to-end (i.e. through the
proxy) using Object Security of CoAP (OSCOAP)
<xref target="I-D.ietf-core-object-security"/>.</t>

<section anchor="transaction-diagrams" title="Transaction Diagrams">

<section anchor="case-of-pre-shared-symmetric-key" title="Case of Pre-Shared Symmetric Key">

<t><xref target="fig_exchange-symmetric"/> shows the exchanges that take place in case pre-shared
symmetric key is used. Messages join_request and join_response are specified in
<xref target="join_request"/> and <xref target="join_response"/>.</t>

<figure title="Sequence diagram in case of symmetric keys." anchor="fig_exchange-symmetric"><artwork align="center"><![CDATA[
+--------+                       +--------+
| pledge |                       |  JRC   |
|        |                       |        |
+--------+                       +--------+
    |                                 |
    |           join_request          |
    +-------------------------------->|
    |                                 |
    |          join_response          |
    |<--------------------------------+
    |                                 |   

]]></artwork></figure>

</section>
<section anchor="case-of-asymmetric-keys" title="Case of Asymmetric Keys">

<t><xref target="fig_exchange-asymmetric"/> details the exchanges between the pledge and JRC that
take place during the execution of the join protocol in case asymmetric keys
are used. Format of EDHOC messages is specified in <xref target="I-D.selander-ace-cose-ecdhe"/>.</t>

<figure title="Sequence diagram in case of asymmetric keys." anchor="fig_exchange-asymmetric"><artwork align="center"><![CDATA[
+--------+                       +--------+
| pledge |                       |  JRC   |
|        |                       |        |
+--------+                       +--------+
    |        EDHOC_message_1          |
    +-------------------------------->|
    |                                 |
    |        EDHOC_message_2          |
    |<--------------------------------+
    |                                 |
    |  EDHOC_message_3 + join_request |
    +-------------------------------->|
    |                                 |
    |          join_response          |
    |<--------------------------------+
    |                                 |   

]]></artwork></figure>

</section>
</section>
<section anchor="proxy-operation-of-join-proxy-jp" title="Proxy Operation of Join Proxy (JP)">

<t>The pledge designates a JP as a proxy by including in the CoAP requests to
the JP the Proxy-Scheme option with value "coap" (CoAP-to-CoAP proxy).
The pledge MUST include the Uri-Host option with its value set to the
well-known JRC's alias - "6tisch.arpa".
The pledge does not need to learn the actual IPv6 address of JRC at any time
during the join protocol.  The JP knows the address of the JRC, via a
provisioning process that occured when the JP, acting as a pledge, joined.
The initial bootstrap of the DODAG root would require explicit provisioning
of the JRC address.</t>

<t>Note that the CoAP proxy by default keeps state information in order
to forward the response towards the originator of the request.  This
state information comprises CoAP token, but the implementations also
need to keep track of the IPv6 address of the host, as well as the
corresponding UDP source port number.  In the setting where the proxy
is a constrained device, as in the case of JP, this makes it prone to
Denial of Service (DoS) attacks, due to the limited memory.</t>

<t>In order to facilitate a stateless implementation of join proxying, the
pledge shall encode in the CoAP message the information necessary for the JP
to send the response back - "origin_info".
For this purpose, the pledge uses the "Context Identifier (Cid)" parameter of
OSCOAP's security context structure.
Context Identifier is sent in clear, readable by JP, and MUST be echoed back
in the response from JRC.
This makes it possible to implement JP's CoAP proxy in a stateless manner.
It also allows JRC to look up the right security context for communication with a given pledge.</t>

<section anchor="implementation-of-origininfo" title="Implementation of origin_info">

<t>The origin_info is implemented as a CBOR <xref target="RFC7049"/> array object
containing:</t>

<t><list style="symbols">
  <t>EUI64: pledge's EUI64 address</t>
  <t>source_port: pledge's UDP source port (EDNOTE/XXX: Can we fix the source port?)</t>
  <t>token: pledge's CoAP token (EDNOTE: is there a way to get rid of token?)</t>
</list></t>

<figure><artwork><![CDATA[
origin_info = [
    EUI64 : bstr,
    source_port : uint,
    token : uint
]
]]></artwork></figure>

</section>
</section>
<section anchor="oscoap-security-context-instantiation" title="OSCOAP Security Context Instantiation">

<t>The OSCOAP security context MUST be derived at pledge and JRC as per Section
3.2 of <xref target="I-D.ietf-core-object-security"/> using HKDF <xref target="RFC5869"/> as the key
derivation function.</t>

<t><list style="symbols">
  <t>Context Identifier (Cid) MUST be the origin_info object wrapped as a byte
    string (bstr).  This context information is included in the derivation
    of the shared secret, so while visible, it is protected.</t>
  <t>Algorithm MUST be set to AES-CCM-16-64-128 from
    <xref target="I-D.ietf-cose-msg"/>.  CoAP messages are therefore protected with
    an 8-byte CCM authentication tag and the algorithm uses 13-byte
    long nonces.</t>
  <t>Base key (base_key) MUST be the secret generated by the run of
    EDHOC, or the PSK in case EDHOC step was omitted.</t>
  <t>Sender ID of pledge MUST be set to 0x00, while the ID of JRC MUST be set to 0x01.</t>
</list></t>

<t>The hash algorithm that instantiates HKDF MUST be SHA-256 <xref target="RFC4231"></xref>.
The derivation in <xref target="I-D.ietf-core-object-security"/> results in traffic
keys and static IVs for each side of the conversation.  Nonces are
constructed by XOR'ing the static IV with current sequence number.
The context derivation process occurs exactly once.</t>

<t>Implementations MUST ensure that multiple CoAP requests to different JRCs
result in the use of the same OSCOAP context so that sequence numbers are
properly incremented for each request.
This may happen in a scenario where there are multiple 6TiSCH networks
present and the pledge tries to join one network at a time.</t>

</section>
<section anchor="join_request" title="Implementation of join_request">

<t>Message join_request SHALL be mapped to a CoAP request:</t>

<t><list style="symbols">
  <t>The request method is GET.</t>
  <t>The Proxy-Scheme option is set to "coap".</t>
  <t>The Uri-Host option is set to "6tisch.arpa".</t>
  <t>The Uri-Path option is set to "j".</t>
  <t>The object security option SHALL be set according to
<xref target="I-D.ietf-core-object-security"/> and OSCOAP parameters set as
described above.</t>
</list></t>

</section>
<section anchor="join_response" title="Implementation of join_response">

<t>If OSCOAP processing is a success, messsage join_response SHALL be mapped to
a CoAP response:</t>

<t><list style="symbols">
  <t>The response Code is 2.05 (Content).</t>
  <t>The payload is a CBOR array containing, in order:
  <list style="symbols">
      <t>COSE Key Set <xref target="I-D.ietf-cose-msg"/>.  Each key in the Key Set
SHALL be a symmetric key.  A key that is present in the Key Set
  and does not have an identifier is assumed to be "K2" link-
  layer key from <xref target="I-D.ietf-6tisch-minimal"/>.  Parameter "kid" of
  the COSE Key structure SHALL be used to denote pair-wise keys
  if present, where the value SHALL be set to the address of the
  corresponding peer.</t>
      <t>Optional byte string representing IEEE 802.15.4 short address
  assigned to pledge.  The short-address includes a lease time.  It is
  used for configuring both L2 short addresses and L3 short
  addresses.</t>
    </list></t>
</list></t>

<figure><artwork><![CDATA[
payload = [
    COSE_KeySet,
    ? short_address : bstr,
]
]]></artwork></figure>

<t>In case JRC determines that pledge is not supposed to join the network
(e.g. by failing to find an appropriate security context), it should respond
with a 4.01 Unauthorized error.
Upon reception of a 4.01 Unauthorized, the pledge SHALL attempt to join the
next advertised 6TiSCH network.
If all join attempts have failed at pledge, the pledge SHOULD signal to the
user by an out-of-band mechanism the presence of an error condition.</t>

</section>
</section>
<section anchor="link-layer-requirements" title="Link-layer requirements">

<t>All frames in a 6TiSCH network MUST use link-layer frame security.
The frame security options MUST include frame authentication, and MAY
include frame encryption.</t>

<t>Link-layer frames are protected with a 16-byte key, and a 13-byte nonce
constructed
from current Absolute Slot Number (ASN) and the source (the JP for
EBs) address, as shown in <xref target="fig_ccm-nonce"/>:</t>

<figure title="Link-layer CCM* nonce construction" anchor="fig_ccm-nonce"><artwork align="center"><![CDATA[
+-------------------------------------------+
|  Address (8B or 00-padded 2B) | ASN (5B)  |
+-------------------------------------------+
]]></artwork></figure>

<t>The pledge does not initially do any authentication of the EB frames, as it
does not know the K1 key.  When sending frames, the pledge sends unencrypted
and unauthenticated frames (exempt mode in 802.15.4).  JP accepts these frames
for the duration of the join process. How JP learns whether
the join process is ongoing is out of scope of this specification.</t>

<t>As the EB itself cannot be authenticated by pledge, an attacker may craft a
frame that appears to be a valid EB, since the pledge can neither know the
ASN a priori nor verify the address of the JP.
This permits a Denial of Service (DoS) attack at the pledge.
Beacon authentication keys are discussed in <xref target="I-D.ietf-6tisch-minimal"/>.</t>

</section>
<section anchor="asymmetric-keys-1" title="Asymmetric Keys">

<t>Certificates or pre-configured RPKs may be used to exchange public keys
between the pledge and JRC.
The key pair is generated using elliptic curve secp256r1, and
the certificate containing the public key is signed using ECDSA.  (XXX: would
be nice to move to EdDSA)</t>

<t>The certificate itself may be a compact
representation of an X.509 certificate, or a full X.509 certificate.
Compact representation of X.509 certificates is out of scope of this
specification.  The certificate is signed by a root CA whose
certificate is installed on all nodes participating in a particular
6TiSCH network, allowing each node to validate the certificate of the
JRC or pledge as appropriate.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>In case PSKs are used, this document mandates that the pledge and JRC are
pre-configured with unique keys.
The uniqueness of generated nonces is guaranteed under the assumption of
unique EUI64 identifiers for each pledge.
Note that the address of the JRC does not take part in nonce construction.
Therefore, even should an error occur, and a PSK shared by a group of nodes,
the nonces constructed as part of the different responses are unique.  The
PSK is still important for authentication of the pledge and authentication of
the JRC to the pledge. Should an attacker come to know the PSK, then a
man-in-the-middle attack is possible.  The well known problem with Bluetooth
headsets with a "0000" pin applies here.
The design differentiates between nonces constructed for requests and nonces
constructed for responses by different sender identifiers (0x00 for pledge
and 0x01 for JRC).</t>

<t>Being a stateless relay, JP blindly forwards the join traffic into the network.
While the exchange between pledge and JP takes place over a shared cell, join
traffic is forwarded using dedicated cells on the JP to JRC path.
In case of distributed scheduling, the join traffic may therefore cause
intermediate nodes to request additional bandwidth. (EDNOTE: this is a
problem that needs to be solved)
Because the relay operation of JP is implemented at the application layer, JP
is the only hop on the JP-6LBR path that can distinguish join traffic from
regular IP traffic in the network.
It is therefore recommended to implement stateless rate limiting at JP: a
simple bandwidth (in bytes or packets/second) cap would be appropriate.</t>

<t>The shared nature of the "minimal" cell used for join traffic makes the
network prone to DoS attacks by congesting the JP with bogus radio traffic.
As such an attacker is limited by emitted radio power, redundancy in the
number of deployed JPs alleviates the issue and also gives the pledge a
possibility to use the best available link for join.
How a network node decides to become a JP is out of scope of this specification.</t>

<t>At the time of the join, the pledge has no means of verifying the content in
the EB and has to accept it at "face value".
In case the pledge tries to join an attacker's network, the join response
message in such cases will either fail the security check or time out.
The pledge may implement a blacklist in order to filter out undesired beacons
and try to join the next seemingly valid network.
The blacklist alleviates the issue but is effectively
limited by the node's available memory.
Such bogus beacons will prolong the join time of the pledge and so the time
spent in "minimal" <xref target="I-D.ietf-6tisch-minimal"/> duty cycle mode.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>This specification relies on the uniqueness of EUI64 that is transferred in
clear as part of the security context identifier. (EDNOTE: should we say IID
here?)
Privacy implications of using such long-term identifier are discussed
in <xref target="RFC7721"/> and comprise correlation of activities over time,
location tracking, address scanning and device-specific vulnerability
exploitation.  Since the join protocol is executed rarely compared to
the network lifetime, long-term threats that arise from using EUI64
are minimal.
In addition, the join response message contains an optional short address
which can be assigned by JRC to the pledge.
The short address is independent of the long-term identifier EUI64 and is
encrypted in the response.
For that reason, it is not possible to
correlate the short address with the EUI64 used during the join.  Use
of short addresses once the join protocol completes mitigates the
aforementioned privacy risks.  In addition, EDHOC may be used for
identity protection during the join protocol by generating a random
context identifier in place of the EUI64
<xref target="I-D.selander-ace-cose-ecdhe"/>.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>There is no IANA action required for this document.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The work on this document has been partially supported by the
European Union's H2020 Programme for research, technological
development and demonstration under grant agreement No 644852,
project ARMOUR.</t>

<t>The authors are grateful to Thomas Watteyne and Goeran Selander for
reviewing the draft.  The authors would also like to thank Francesca
Palombini and Ludwig Seitz for participating in the discussions that
have helped shape the document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC7252;
&RFC7049;
&I-D.ietf-cose-msg;
&I-D.ietf-core-object-security;


    </references>

    <references title='Informative References'>

&RFC7554;
&RFC6775;
&RFC6347;
&RFC5869;
&RFC4231;
&RFC7721;
&I-D.ietf-6tisch-minimal;
&I-D.ietf-6tisch-dtsecurity-secure-join;
&I-D.ietf-6tisch-6top-protocol;
&I-D.ietf-6tisch-terminology;
&I-D.selander-ace-cose-ecdhe;
&I-D.ietf-anima-bootstrapping-keyinfra;
<reference anchor="IEEE8021542015" >
  <front>
    <title>IEEE Std 802.15.4-2015 Standard for Low-Rate Wireless Personal Area Networks (WPANs)</title>
    <author initials="." surname="IEEE standard for Information Technology">
      <organization></organization>
    </author>
    <date year="2015"/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t><xref target="fig_example-psk"/> illustrates a join protocol exchange in case PSKs are used.
Pledge instantiates the OSCOAP context and derives the traffic keys and
nonces from the PSK.  It uses the instantiated context to protect the
CoAP request addressed with Proxy-Scheme option and well-known host
name of JRC in the Uri-Host option.  The example assumes a JP that is
already aware of JRC's IPv6 address and does not need to resolve the
well-known "6tisch.arpa" host name.  Triggered by the presence of
Proxy-Scheme option, JP forwards the request to the JRC.  Once JRC
receives the request, it looks up the correct context based on the
context identifier (cid) field.  It reconstructs OSCOAP's external
Additional Authenticated Data (AAD) needed for verification based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"/></t>
  <t>Request URI reconstructed following
    <xref target="I-D.ietf-core-object-security"/>.</t>
</list></t>

<t>Replay protection is ensured by OSCOAP and the tracking of sequence
numbers at each side.  In the example below, the response contains
sequence number 7 meaning that there have already been some attempts
to join under a given context, not coming from the pledge.  Once JP
receives the response, it looks up and decodes the cid field in order
to decide where to forward it.  JP constructs the CoAP response to pledge
by setting the CoAP token to the value decoded from cid and
constructs the link-local IPv6 address of pledge from the EUI64 address
found in the cid.  Note that JP does not posses the key to decrypt
the COSE object present in the payload so the join_response object is
opaque to it.  The response is matched to the request and verified
for replay protection at pledge using OSCOAP processing rules.  Namely,
to verify the response pledge reconstructs the AAD based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"/>.</t>
  <t>Transaction identifier (Tid) of the corresponding CoAP request.
    Tid contains the context identifier (origin_info object), Sender
    ID (0x00 for pledge), and Sender Sequence number (set to 1 in the
    example).</t>
</list></t>

<t>In addition to AAD, pledge also uses the explicit, protected fields in
the COSE message, present in the payload of the response.  For more
details, see <xref target="I-D.ietf-core-object-security"/> and <xref target="I-D.ietf-cose-msg"/>.</t>

<figure title="Example of a join protocol exchange with a PSK. {} denotes encryption and authentication, [] denotes authentication." anchor="fig_example-psk"><artwork align="center"><![CDATA[
<--E2E OSCOAP-->
Client  Proxy Server
Pledge   JP    JRC
  |      |      |
  +----->|      |            Code: [0.01] (GET)
  | GET  |      |           Token: 0x8c
  |      |      |    Proxy-Scheme: [coap]
  |      |      |        Uri-Host: [6tisch.arpa]
  |      |      | Object-Security: [cid:origin_info, seq:1,
  |      |      |                   {Uri-Path:"j"},
  |      |      |                   <Tag>]
  |      |      |         Payload: -
  |      |      |
  |      +----->|            Code: [0.01] (GET)
  |      | GET  |           Token: 0x7b
  |      |      |        Uri-Host: [6tisch.arpa]
  |      |      | Object-Security: [cid:origin_info, seq:1,
  |      |      |                   {Uri-Path:"j"},
  |      |      |                   <Tag>]
  |      |      |         Payload: -
  |      |      |
  |      |<-----+            Code: [2.05] (Content)
  |      | 2.05 |           Token: 0x7b
  |      |      | Object-Security: -
  |      |      |         Payload: [cid: origin_info, seq:7,
  |      |      |                   {join_response}, <Tag>]
  |      |      |
  |<-----+      |            Code: [2.05] (Content)
  | 2.05 |      |           Token: 0x8c
  |      |      | Object-Security: -
  |      |      |         Payload: [cid: origin_info, seq:7,
  |      |      |                   {join_response}, <Tag>]
  |      |      |
]]></artwork></figure>

<t>Where origin_info and join_response are as follows.</t>

<figure><artwork><![CDATA[
origin_info:
[
    h'00170d00060d9f0e', / Pledge's EUI64 /
    49152, / Pledge's UDP source port /
    0x8c   / Pledge's CoAP token /
]
]]></artwork></figure>

<t>Encodes to h'834800170d00060d9f0e19c000188c' with a size of 15 bytes.</t>

<figure><artwork><![CDATA[
join_response:
[
    [   / COSE Key Set array with a single key /
        {
            1:4, / key type symmetric /
            -1:h'e6bf4287c2d7618d6a9687445ffd33e6' / key value /
        }
    ],
    h'af93' / assigned short address /
]
]]></artwork></figure>

<t>Encodes to h'8281a201042050e6bf4287c2d7618d6a9687445ffd33e642af93'
with a size of 26 bytes.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIADHenVgAA+1963LbRrrg/36KLvmHpYSgKVqSbVUmM7SkxIptSSvKk5zK
ulxNoEkiAgEOAErmJD6177BvuE+y360bDZCyfc5kq/bGHwlNNPry3a+tKIpU
ndaZPdZv0zxdmEyPbbwq03qtfyjNwt4X5a2eFqU+uknHJ6/UI20mk9LeHeuj
Oq3iebTg16JKXlNJEefw4rFOSjOto9TW0+iBsdFgX8GMVW3y5IPJihzeqsuV
VSpdlvS1qoeDwYvBUJnSmmN9nte2zG2t7mfHsiP9M+wwzWf6x7JYLdXtfTMq
OsUdqNjUx7BGolRcJDDyWK+qyFRxmqpleqx/rYu4p6tiWpd2WsG39QK/vFfK
rOp5UR4rTZ9I/q91mlcArr7++yqGA8X+dz72W5Olldl4WJQz3FmZGv+TXZg0
O9YLeqF/xy/8LcUx/Wnph1WwMQtHGOrrldXjdAFw0ufTqR8QAyiP9ZUp06r5
rUhgL88OB/vD4LdVXpcwFDCbx3b7uX7q8xKdU/1U5Kaem7zzkE71Js2tKfWN
jed5kRWzdfeEv1X40t8yGtePi8XG2Z4OX7wY6FF2Z0qTFNFFmtlKXxcm6enx
Kq2tfrE/6Jz3XZ4WuT6B7z19Muoc/MXB4fNnmwd/Nx5tP/Xrvr5KKyCbzrFf
A0y7T+jMsPqdLSvkk2KqTwCFwCR5avRLW97azG7AYEmT/M3auOpPZEzfJqsN
UBzuD/VJUa71K5NlnTO7ybee+NlwsP3EKi/Khalhw8cKRlz/cDLc339xzF+f
DQ+H7uvggH49j077xLZxUdloUc06P5Y2Kia/2bj2jAzzpvm0WYWnOzw8kK9H
z54duq9PD57J18PnR24XB8On++61Z8P91oJt4bHtUVJ7iUJfbPRbkebbRh7V
xTJalgXwfLF1KsARLERU7B5XNgP5ZMvIxJZBYuNkbltvG9xbNCmKGtBolksQ
M9GtXQNQSkMDz87Ong+G+4cHw8H+IYsUkbs7+EyP60TDgP7+Yf8gwjHwC6xq
yoSk75viPro2wAc/pyUQQAVECdQHPJnpEUhGfWFrlNSV3v35anRR7e3QCm0B
RoTOq1Xh3OcOc8BODQ/zDAmsCZIH9qOUiqIIpD8eMK6VupkDa5CM14mt4jKd
AMvWc6sFUXoBcwFcqkWlS/uPFWw80XWhq9VyWZS1ZkwB3aR1CqPjIp+ms1XJ
+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
mbhCGltj6Z4MJQ27PQyNfGVN4gNoa5UvfBdFZ8MzoeIo+l6d0BUMWnoCx3Tj
grPJ5PJcUuK+5dH9T7kmze/bD/hzQn+769dBf7D/Xu/+eHazRzPAl+5ETBLc
PzH4+DzeXAn/E5ohMC8Wjr7fPhI/ztyCkYHVs+0FvvHA3xCLU6fJcUB8iIB/
HO/3Hl4s+PzuilKPd37b+fR173x3Y2bff+Ys+oqJ5Zj+tNsmEuRrGxf8eQAJ
MkOIC/p4JDyb/H/QBqCVnuBWR7eAFstl3zf1suEsVEn79eDdgNaWLW3um0Cq
N2D67Cth2q457j0IMNUFwjYy2waLEAhfz+//e8Nie0u3d4ddPZg4zFxG+YBL
LPlbclV//6+fpN63Cgr7tmSle/rX935k+1H/SyVmP5PNGerW7fed0G2H1BLY
f7Al7Vhxiez88WCw/2yQDAaDo0HyYjqwj3v6idz947vvntDYgxf7h8PW027X
HY9DwoD/BeMC8/ZJt9j2LI9dHnT++PnTg+fdDe2/iOEf+8+fx48dzCv8q2yA
m/1DTud1ztkCiTvpr7SlVl0718H7OfNZxgbuE19q/HtTdAyf/eMDPD7ZwOul
Daran7TGRfvH88f2aDI9GD5/Fg+TZ0f7z5Mj8+Lo+bODg8PpNHn61B49lpnY
0G8m+ETf3vcEPWb64ikO9bHeduz0C+AcPt83w8H+4GA4OBx8aUcHQ1pMdYA8
PPJA/p9eRjjOmXcAAA==

-->

</rfc>


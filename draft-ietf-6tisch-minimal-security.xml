<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7252 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml">
<!ENTITY RFC7049 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml">
<!ENTITY I-D.ietf-cose-msg SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-cose-msg.xml">
<!ENTITY I-D.ietf-core-object-security SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-object-security.xml">
<!ENTITY RFC7554 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7554.xml">
<!ENTITY RFC6775 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC6347 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC5869 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5869.xml">
<!ENTITY RFC4231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4231.xml">
<!ENTITY RFC7721 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7721.xml">
<!ENTITY I-D.ietf-6tisch-minimal SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-minimal.xml">
<!ENTITY I-D.ietf-6tisch-dtsecurity-secure-join SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-dtsecurity-secure-join.xml">
<!ENTITY I-D.ietf-6tisch-6top-protocol SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-6top-protocol.xml">
<!ENTITY I-D.ietf-6tisch-terminology SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-terminology.xml">
<!ENTITY I-D.selander-ace-cose-ecdhe SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.selander-ace-cose-ecdhe.xml">
<!ENTITY I-D.ietf-anima-bootstrapping-keyinfra SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-bootstrapping-keyinfra.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc tocdepth="2"?>

<rfc ipr="trust200902" docName="draft-ietf-6tisch-minimal-security-01" category="std">

  <front>
    <title>Minimal Security Framework for 6TiSCH</title>

    <author initials="M." surname="Vucinic" fullname="Malisa Vucinic">
      <organization>Inria</organization>
      <address>
        <postal>
          <street>2 Rue Simone Iff</street>
          <city>Paris</city>
          <code>75012</code>
          <country>France</country>
        </postal>
        <email>malisa.vucinic@inria.fr</email>
      </address>
    </author>
    <author initials="J." surname="Simon" fullname="Jonathan Simon">
      <organization>Linear Technology</organization>
      <address>
        <postal>
          <street>32990 Alvarado-Niles Road, Suite 910</street>
          <city>Union City, CA</city>
          <code>94587</code>
          <country>USA</country>
        </postal>
        <email>jsimon@linear.com</email>
      </address>
    </author>
    <author initials="K." surname="Pister" fullname="Kris Pister">
      <organization>University of California Berkeley</organization>
      <address>
        <postal>
          <street>512 Cory Hall</street>
          <city>Berkeley, CA</city>
          <code>94720</code>
          <country>USA</country>
        </postal>
        <email>pister@eecs.berkeley.edu</email>
      </address>
    </author>

    <date year="2017" month="February" day="10"/>

    <area>Internet</area>
    <workgroup>6TiSCH Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This draft describes the minimal mechanisms required to support secure
initial configuration of a pledge, a device being added to a 6TiSCH network.
The goal of this configuration is to set link-layer keys, and to establish a
secure session between each pledge and the join registrar who may use that to
further configure the pledge.
Additional security behaviors and mechanisms may be added on top of this minimal framework.</t>



    </abstract>


  </front>

  <middle>


<section anchor="problems" title="Introduction">

<t>When a previously unknown device seeks admission to a 6TiSCH
<xref target="RFC7554"/> network (to "join"), it first needs to synchronize to the
network.  The device or pledge then configures its IPv6 address and
authenticates itself, and also validates that it is joining the right
network.  At this point it can expect to interact with the network to
configure its link-layer keying material.  Only then may the node
establish an end-to-end secure session with an Internet host using
DTLS <xref target="RFC6347"/> or OSCOAP <xref target="I-D.ietf-core-object-security"/>.  Once the
application requirements are known, the node interacts with its
peers to request additional resources as needed, or to be
reconfigured as the network changes <xref target="I-D.ietf-6tisch-6top-protocol"/>.</t>

<t>This document describes the mechanisms comprising a minimal feature
set for a pledge to join a 6TiSCH network, up to the point where it
can establish a secure session with an Internet host.</t>

<t>It presumes a network as described by <xref target="RFC7554"/>,
<xref target="I-D.ietf-6tisch-6top-protocol"/>, and <xref target="I-D.ietf-6tisch-terminology"/>.
It assumes the pledge pre-configured with either a:</t>

<t><list style="symbols">
  <t>pre-shared key (PSK),</t>
  <t>raw public key (RPK),</t>
  <t>or a locally-valid certificate and a trust anchor.</t>
</list></t>

<t>As the outcome of the join process, the pledge expects one or
more link-layer key(s) and optionally a temporary network identifier.</t>

</section>
<section anchor="Terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>. These words
may also appear in this document in lowercase, absent their normative meanings.</t>

<t>The reader is expected to be familiar with the terms and concepts defined in
<xref target="I-D.ietf-6tisch-terminology"/>, <xref target="RFC7252"/>,
<xref target="I-D.ietf-core-object-security"/>, and <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.
The following terms are imported: pledge, join proxy, join registrar/coordinator, 
drop ship, imprint, enrollment, ownership voucher.</t>

<t><list style="hanging">
  <t hangText='Pledge:'>
  the prospective device, which has the identity provided to
at the factory.  Neither the device nor the network knows if the
device yet knows if this device belongs with this network.</t>
  <t hangText='Joined Node:'>
  the prospective device, after having completed the join process, often just called a Node.</t>
  <t hangText='Join Proxy (JP):'>
  a stateless relay that provides connectivity between the pledge
and the join registrar/coordinator.</t>
  <t hangText='Join Registrar/Coordinator (JRC):'>
  central entity responsible for authentication and authorization of joining nodes.</t>
</list></t>

</section>
<section anchor="join-overview" title="Join Overview">

<t>This section describes the steps taken by a pledge in a 6TiSCH network.
When a previously unknown device seeks admission to
a 6TiSCH <xref target="RFC7554"/> network, the following exchange occurs:</t>

<t><list style="numbers">
  <t>The pledge listens for an Enhanced Beacon (EB) frame
   <xref target="IEEE8021542015"/>.  This frame provides network synchronization
   information, and tells the device when it can send a frame to the
   node sending the beacons, which plays the role of Join Proxy
   (JP) for the pledge, and when it can expect to receive a frame.</t>
  <t>The pledge configures its link-local IPv6 address and advertizes it to Join Proxy (JP).</t>
  <t>The pledge sends packets to JP in order to securely identify itself to the network.
These packets are directed to the Join Registrar/Coordinator  (JRC),
which may be co-located on the JP or another device.</t>
  <t>The pledge receives one or more packets from JRC (via the JP) that sets
up one or more link-layer keys used to authenticate subsequent
transmissions to peers.</t>
</list></t>

<t>From the pledge's perspective, minimal joining is a local phenomenon &#8211;
the pledge only interacts with the JP, and it need not know how far it is
from the DAG root, or how to route to the JRC.
Only after establishing one or more link-layer keys does it need to know
about the particulars of a 6TiSCH network.</t>

<t>The handshake is shown as a transaction diagram in <xref target="fig_sequence-diagram"/>:</t>

<figure title="Overview of the join protocol." anchor="fig_sequence-diagram"><artwork align="center"><![CDATA[
+--------+                 +-------+                   +--------+
| pledge |                 |  JP   |                   |  JRC   |
|        |                 |       |                   |        |
+--------+                 +-------+                   +--------+
    |                          |                            | 
    |<----ENH BEACON (1)-------|                            |
    |                          |                            |
    |<-Neighbor Discovery (2)->|                            |  
    |                          |                            |
    |<---Sec. Handshake (3)----|--Security Handshake (3a)-->|
    |                          |                            |
    |-----Join request (4)-----|--------Join request (4a)-->|
    |                          |                            |
    |<---Join response (5)-----|-------Join response (5a)---|
    |                          |                            |

]]></artwork></figure>

<t>The details of each step are described in the following sections.</t>

<section anchor="step-1-enhanced-beacon" title="Step 1 - Enhanced Beacon">

<t>The pledge hears an EB from the JP and synchronizes itself to the joining
schedule using the cells contained in the EB.
At this point the pledge MAY proceed to step 2, or continue to listen for additional EBs.
If more than one EB is heard, the pledge MAY use a metric based on DAG rank
and received signal level of the EB, or other factors to decide which JP to
use for the security handshake in step 3.
Details on how a pledge chooses the JP are out of scope of this specification.</t>

</section>
<section anchor="step-2-neighbor-discovery" title="Step 2 - Neighbor Discovery">

<t>At this point, pledge forms its link-local IPv6 address based on EUI64
and MAY further follow the Neighbor Discovery (ND) process described
in Section 5 of <xref target="RFC6775"></xref>.</t>

</section>
<section anchor="step-3-security-handshake" title="Step 3 - Security Handshake">

<t>The security handshake between pledge and JRC uses Ephemeral
Diffie-Hellman over COSE (EDHOC) <xref target="I-D.selander-ace-cose-ecdhe"/>
to establish the shared session secret used to encrypt the join request and
join response.</t>

<t>The security handshake step is OPTIONAL in case PSKs are used, while it is
REQUIRED for RPKs and certificates. When using certificates, the process
outlined in <xref target="I-D.ietf-6tisch-dtsecurity-secure-join"/> would be followed, and
once complete, the process would continue here with a locally relevant
security credential, or an established shared secret.</t>

<t>In case the handshake step is omitted, the shared secret used for protection
of the join request and join response in the next step is the PSK.</t>

<t>A consequence is that if the long-term PSK is
compromised, keying material transferred as part of the join response
is compromised as well.
Physical compromise of the pledge, however, would also imply the compromise
of the same keying material, as it is likely to be found in node's memory.</t>

<section anchor="pre-shared-symmetric-key" title="Pre-Shared Symmetric Key">

<t>The Diffie-Hellman key exchange and the use of EDHOC is optional,
when using a pre-shared symmetric key.
This cuts down on traffic between JRC and pledge, but requires
pre-configuration (one-touch) of the shared key on both devices.</t>

<t>It is REQUIRED to use unique PSKs for each pledge.  If there are multiple
JRC's in the network (such as for redundancy), they would have to share a
database of PSKs.</t>

</section>
<section anchor="asymmetric-keys" title="Asymmetric Keys">

<t>The Security Handshake step is required, when using asymmetric keys.
Before conducting the Diffie-Hellman key exchange using EDHOC <xref target="I-D.selander-ace-cose-ecdhe"/>
the pledge and JRC need to receive and validate each other's public key certificate.
When RPKs are pre-configured at pledge and JRC, they can directly proceed to the handshake.</t>

</section>
</section>
<section anchor="step-4-join-request" title="Step 4 - Join Request">

<t>The join request is sent from the pledge to the JP using the shared slot as
described in the EB, and forwarded to the JRC. Which slot the JP uses to
transmit to the JRC is out of scope: some networks may wish to dedicate
specific slots for this join traffic.</t>

<t>The join request is authenticated/encrypted end-to-end using AES-CCM-
16-64-128 algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from
the shared secret from step 3.
The nonce is derived from the shared secret, the pledge's EUI64 and a
monotonically increasing counter initialized to 0 when first starting.</t>

</section>
<section anchor="step-5-join-response" title="Step 5 - Join Response">

<t>The join response is sent from the JRC to the pledge through JP that serves as a stateless relay.
Packet containing the join response travels on the path from JRC to JP using
pre-established routes in the network.
The JP delivers it to the pledge using the slot information from the EB.
JP operates as the application-layer proxy and does not keep
any state to relay the message. It uses information sent in the
clear within the join response to decide where to forward to.</t>

<t>The join response is authenticated/encrypted using AES-CCM-16-64-128
algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from the shared
secret from step 3.</t>

<t>The nonce is derived from the shared secret, pledge's EUI64 and a
monotonically increasing counter matching that of the join request.</t>

<t>The join response contains one or more (per-peer) link-layer key(s) K2 that
the pledge will use for subsequent communication. Each K2 that is provided by the
JRC is associated with an 802.15.4 keyid. In other link-layer technologies,
a different identifier may be substituted.
It optionally also contains an IEEE 802.15.4 short-address
<xref target="IEEE8021542015"/> assigned to pledge by JRC.</t>

</section>
</section>
<section anchor="protocol-specification" title="Protocol Specification">

<t>The join protocol in <xref target="fig_sequence-diagram"/> is implemented over Constrained
Application Protocol (CoAP) <xref target="RFC7252"/>.
The Pledge plays the role of a CoAP client, JRC the role of a CoAP server,
while JP implements CoAP forward proxy functionality <xref target="RFC7252"/>
Since JP is also likely a constrained device, it does not need to implement a
cache but rather process forwarding-related CoAP options and make requests on
behalf of pledge that is not yet part of the network.</t>

<t>Pledge and JRC MUST protect their exchange end-to-end (i.e. through the
proxy) using Object Security of CoAP (OSCOAP)
<xref target="I-D.ietf-core-object-security"/>.</t>

<section anchor="transaction-diagrams" title="Transaction Diagrams">

<section anchor="case-of-pre-shared-symmetric-key" title="Case of Pre-Shared Symmetric Key">

<t><xref target="fig_exchange-symmetric"/> shows the exchanges that take place in case pre-shared
symmetric key is used. Messages join_request and join_response are specified in
<xref target="join_request"/> and <xref target="join_response"/>. These messages are protected by OSCOAP,
using PSK as the shared secret.</t>

<figure title="Transaction diagram in case of symmetric keys." anchor="fig_exchange-symmetric"><artwork align="center"><![CDATA[
+--------+                       +--------+
| pledge |                       |  JRC   |
|        |                       |        |
+--------+                       +--------+
    |                                 |
    |           join_request          |
    +-------------------------------->|
    |                                 |
    |          join_response          |
    |<--------------------------------+
    |                                 |   

]]></artwork></figure>

</section>
<section anchor="case-of-asymmetric-keys" title="Case of Asymmetric Keys">

<t><xref target="fig_exchange-asymmetric"/> details the exchanges between the pledge and JRC that
take place during the execution of the join protocol in case asymmetric keys
are used. Format of EDHOC messages is specified in <xref target="I-D.selander-ace-cose-ecdhe"/>.</t>

<figure title="Transaction diagram in case of asymmetric keys." anchor="fig_exchange-asymmetric"><artwork align="center"><![CDATA[
+--------+                       +--------+
| pledge |                       |  JRC   |
|        |                       |        |
+--------+                       +--------+
    |        EDHOC_message_1          |
    +-------------------------------->|
    |                                 |
    |        EDHOC_message_2          |
    |<--------------------------------+
    |                                 |
    |  EDHOC_message_3 + join_request |
    +-------------------------------->|
    |                                 |
    |          join_response          |
    |<--------------------------------+
    |                                 |   

]]></artwork></figure>

</section>
</section>
<section anchor="proxy-operation-of-join-proxy-jp" title="Proxy Operation of Join Proxy (JP)">

<t>The pledge designates a JP as a proxy by including in the CoAP requests to
the JP the Proxy-Scheme option with value "coap" (CoAP-to-CoAP proxy).
The pledge MUST include the Uri-Host option with its value set to the
well-known JRC's alias - "6tisch.arpa".
The pledge does not need to learn the actual IPv6 address of JRC at any time
during the join protocol.  The JP knows the address of the JRC, via a
provisioning process that occured when the JP, acting as a pledge, joined.
The initial bootstrap of the DODAG root would require explicit provisioning
of the JRC address.</t>

<t>Note that the CoAP proxy by default keeps state information in order
to forward the response towards the originator of the request.  This
state information comprises CoAP token, but the implementations also
need to keep track of the IPv6 address of the host, as well as the
corresponding UDP source port number.  In the setting where the proxy
is a constrained device, as in the case of JP, this makes it prone to
Denial of Service (DoS) attacks, due to the limited memory.</t>

<t>In order to facilitate a stateless implementation of join proxying, the
pledge shall encode in the CoAP message the information necessary for the JP
to send the response back - "origin_info".
For this purpose, the pledge uses the "Context Identifier (Cid)" parameter of
OSCOAP's security context structure.
Context Identifier is sent in clear, readable by JP, and MUST be echoed back
in the response from JRC.
This makes it possible to implement JP's CoAP proxy in a stateless manner.
It also allows JRC to look up the right security context for communication with a given pledge.</t>

<section anchor="implementation-of-origininfo" title="Implementation of origin_info">

<t>The origin_info is implemented as a CBOR <xref target="RFC7049"/> array object
containing:</t>

<t><list style="symbols">
  <t>EUI64: pledge's EUI64 address</t>
  <t>source_port: pledge's UDP source port (EDNOTE/XXX: Can we fix the source port?)</t>
  <t>token: pledge's CoAP token (EDNOTE: is there a way to get rid of token?)</t>
</list></t>

<figure><artwork><![CDATA[
origin_info = [
    EUI64 : bstr,
    source_port : uint,
    token : uint
]
]]></artwork></figure>

</section>
</section>
<section anchor="oscoap-security-context-instantiation" title="OSCOAP Security Context Instantiation">

<t>The OSCOAP security context MUST be derived at pledge and JRC as per Section
3.2 of <xref target="I-D.ietf-core-object-security"/> using HKDF <xref target="RFC5869"/> as the key
derivation function.</t>

<t><list style="symbols">
  <t>Context Identifier (Cid) MUST be the origin_info object wrapped as a byte
    string (bstr).  This context information is included in the derivation
    of the shared secret, so while visible, it is protected.</t>
  <t>Algorithm MUST be set to AES-CCM-16-64-128 from
    <xref target="I-D.ietf-cose-msg"/>.  CoAP messages are therefore protected with
    an 8-byte CCM authentication tag and the algorithm uses 13-byte
    long nonces.</t>
  <t>Base key (base_key) MUST be the secret generated by the run of
    EDHOC, or the PSK in case EDHOC step was omitted.</t>
  <t>Sender ID of pledge MUST be set to 0x00, while the ID of JRC MUST be set to 0x01.</t>
</list></t>

<t>The hash algorithm that instantiates HKDF MUST be SHA-256 <xref target="RFC4231"></xref>.
The derivation in <xref target="I-D.ietf-core-object-security"/> results in traffic
keys and static IVs for each side of the conversation.  Nonces are
constructed by XOR'ing the static IV with current sequence number.
The context derivation process occurs exactly once.</t>

<t>Implementations MUST ensure that multiple CoAP requests to different JRCs
result in the use of the same OSCOAP context so that sequence numbers are
properly incremented for each request.
This may happen in a scenario where there are multiple 6TiSCH networks
present and the pledge tries to join one network at a time.</t>

</section>
<section anchor="join_request" title="Implementation of join_request">

<t>Message join_request SHALL be mapped to a CoAP request:</t>

<t><list style="symbols">
  <t>The request method is GET.</t>
  <t>The Proxy-Scheme option is set to "coap".</t>
  <t>The Uri-Host option is set to "6tisch.arpa".</t>
  <t>The Uri-Path option is set to "j".</t>
  <t>The object security option SHALL be set according to
<xref target="I-D.ietf-core-object-security"/> and OSCOAP parameters set as
described above.</t>
</list></t>

</section>
<section anchor="join_response" title="Implementation of join_response">

<t>If OSCOAP processing is a success, messsage join_response SHALL be mapped to
a CoAP response:</t>

<t><list style="symbols">
  <t>The response Code is 2.05 (Content).</t>
  <t>The payload is a CBOR array containing, in order:
  <list style="symbols">
      <t>COSE Key Set <xref target="I-D.ietf-cose-msg"/>.  Each key in the Key Set
SHALL be a symmetric key.  A key that is present in the Key Set
  and does not have an identifier is assumed to be "K2" link-
  layer key from <xref target="I-D.ietf-6tisch-minimal"/>.  Parameter "kid" of
  the COSE Key structure SHALL be used to denote pair-wise keys
  if present, where the value SHALL be set to the address of the
  corresponding peer.</t>
      <t>Optional byte string representing IEEE 802.15.4 short address
  assigned to pledge.  The short-address includes a lease time.  It is
  used for configuring both L2 short addresses and L3 short
  addresses.</t>
    </list></t>
</list></t>

<figure><artwork><![CDATA[
payload = [
    COSE_KeySet,
    ? short_address : bstr,
]
]]></artwork></figure>

<t>In case JRC determines that pledge is not supposed to join the network
(e.g. by failing to find an appropriate security context), it should respond
with a 4.01 Unauthorized error.
Upon reception of a 4.01 Unauthorized, the pledge SHALL attempt to join the
next advertised 6TiSCH network.
If all join attempts have failed at pledge, the pledge SHOULD signal to the
user by an out-of-band mechanism the presence of an error condition.</t>

</section>
</section>
<section anchor="link-layer-requirements" title="Link-layer requirements">

<t>All frames in a 6TiSCH network MUST use link-layer frame security.
The frame security options MUST include frame authentication, and MAY
include frame encryption.</t>

<t>Link-layer frames are protected with a 16-byte key, and a 13-byte nonce
constructed
from current Absolute Slot Number (ASN) and the source (the JP for
EBs) address, as shown in <xref target="fig_ccm-nonce"/>:</t>

<figure title="Link-layer CCM* nonce construction" anchor="fig_ccm-nonce"><artwork align="center"><![CDATA[
+-------------------------------------------+
|  Address (8B or 00-padded 2B) | ASN (5B)  |
+-------------------------------------------+
]]></artwork></figure>

<t>The pledge does not initially do any authentication of the EB frames, as it
does not know the K1 key.  When sending frames, the pledge sends unencrypted
and unauthenticated frames (exempt mode in 802.15.4).  JP accepts these frames
for the duration of the join process. How JP learns whether
the join process is ongoing is out of scope of this specification.</t>

<t>As the EB itself cannot be authenticated by pledge, an attacker may craft a
frame that appears to be a valid EB, since the pledge can neither know the
ASN a priori nor verify the address of the JP.
This permits a Denial of Service (DoS) attack at the pledge.
Beacon authentication keys are discussed in <xref target="I-D.ietf-6tisch-minimal"/>.</t>

</section>
<section anchor="asymmetric-keys-1" title="Asymmetric Keys">

<t>Certificates or pre-configured RPKs may be used to exchange public keys
between the pledge and JRC.
The key pair is generated using elliptic curve secp256r1, and
the certificate containing the public key is signed using ECDSA.  (XXX: would
be nice to move to EdDSA)</t>

<t>The certificate itself may be a compact
representation of an X.509 certificate, or a full X.509 certificate.
Compact representation of X.509 certificates is out of scope of this
specification.  The certificate is signed by a root CA whose
certificate is installed on all nodes participating in a particular
6TiSCH network, allowing each node to validate the certificate of the
JRC or pledge as appropriate.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>In case PSKs are used, this document mandates that the pledge and JRC are
pre-configured with unique keys.
The uniqueness of generated nonces is guaranteed under the assumption of
unique EUI64 identifiers for each pledge.
Note that the address of the JRC does not take part in nonce construction.
Therefore, even should an error occur, and a PSK shared by a group of nodes,
the nonces constructed as part of the different responses are unique.  The
PSK is still important for authentication of the pledge and authentication of
the JRC to the pledge. Should an attacker come to know the PSK, then a
man-in-the-middle attack is possible.  The well known problem with Bluetooth
headsets with a "0000" pin applies here.
The design differentiates between nonces constructed for requests and nonces
constructed for responses by different sender identifiers (0x00 for pledge
and 0x01 for JRC).</t>

<t>Being a stateless relay, JP blindly forwards the join traffic into the network.
While the exchange between pledge and JP takes place over a shared cell, join
traffic is forwarded using dedicated cells on the JP to JRC path.
In case of distributed scheduling, the join traffic may therefore cause
intermediate nodes to request additional bandwidth. (EDNOTE: this is a
problem that needs to be solved)
Because the relay operation of JP is implemented at the application layer, JP
is the only hop on the JP-6LBR path that can distinguish join traffic from
regular IP traffic in the network.
It is therefore recommended to implement stateless rate limiting at JP: a
simple bandwidth (in bytes or packets/second) cap would be appropriate.</t>

<t>The shared nature of the "minimal" cell used for join traffic makes the
network prone to DoS attacks by congesting the JP with bogus radio traffic.
As such an attacker is limited by emitted radio power, redundancy in the
number of deployed JPs alleviates the issue and also gives the pledge a
possibility to use the best available link for join.
How a network node decides to become a JP is out of scope of this specification.</t>

<t>At the time of the join, the pledge has no means of verifying the content in
the EB and has to accept it at "face value".
In case the pledge tries to join an attacker's network, the join response
message in such cases will either fail the security check or time out.
The pledge may implement a blacklist in order to filter out undesired beacons
and try to join the next seemingly valid network.
The blacklist alleviates the issue but is effectively
limited by the node's available memory.
Such bogus beacons will prolong the join time of the pledge and so the time
spent in "minimal" <xref target="I-D.ietf-6tisch-minimal"/> duty cycle mode.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>This specification relies on the uniqueness of EUI64 that is transferred in
clear as part of the security context identifier. (EDNOTE: should we say IID
here?)
Privacy implications of using such long-term identifier are discussed
in <xref target="RFC7721"/> and comprise correlation of activities over time,
location tracking, address scanning and device-specific vulnerability
exploitation.  Since the join protocol is executed rarely compared to
the network lifetime, long-term threats that arise from using EUI64
are minimal.
In addition, the join response message contains an optional short address
which can be assigned by JRC to the pledge.
The short address is independent of the long-term identifier EUI64 and is
encrypted in the response.
For that reason, it is not possible to
correlate the short address with the EUI64 used during the join.  Use
of short addresses once the join protocol completes mitigates the
aforementioned privacy risks.  In addition, EDHOC may be used for
identity protection during the join protocol by generating a random
context identifier in place of the EUI64
<xref target="I-D.selander-ace-cose-ecdhe"/>.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>There is no IANA action required for this document.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The work on this document has been partially supported by the
European Union's H2020 Programme for research, technological
development and demonstration under grant agreement No 644852,
project ARMOUR.</t>

<t>The authors are grateful to Thomas Watteyne and Goeran Selander for
reviewing the draft.  The authors would also like to thank Francesca
Palombini and Ludwig Seitz for participating in the discussions that
have helped shape the document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC7252;
&RFC7049;
&I-D.ietf-cose-msg;
&I-D.ietf-core-object-security;


    </references>

    <references title='Informative References'>

&RFC7554;
&RFC6775;
&RFC6347;
&RFC5869;
&RFC4231;
&RFC7721;
&I-D.ietf-6tisch-minimal;
&I-D.ietf-6tisch-dtsecurity-secure-join;
&I-D.ietf-6tisch-6top-protocol;
&I-D.ietf-6tisch-terminology;
&I-D.selander-ace-cose-ecdhe;
&I-D.ietf-anima-bootstrapping-keyinfra;
<reference anchor="IEEE8021542015" >
  <front>
    <title>IEEE Std 802.15.4-2015 Standard for Low-Rate Wireless Personal Area Networks (WPANs)</title>
    <author initials="." surname="IEEE standard for Information Technology">
      <organization></organization>
    </author>
    <date year="2015"/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t><xref target="fig_example-psk"/> illustrates a join protocol exchange in case PSKs are used.
Pledge instantiates the OSCOAP context and derives the traffic keys and
nonces from the PSK.  It uses the instantiated context to protect the
CoAP request addressed with Proxy-Scheme option and well-known host
name of JRC in the Uri-Host option.  The example assumes a JP that is
already aware of JRC's IPv6 address and does not need to resolve the
well-known "6tisch.arpa" host name.  Triggered by the presence of
Proxy-Scheme option, JP forwards the request to the JRC.  Once JRC
receives the request, it looks up the correct context based on the
context identifier (cid) field.  It reconstructs OSCOAP's external
Additional Authenticated Data (AAD) needed for verification based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"/></t>
  <t>Request URI reconstructed following
    <xref target="I-D.ietf-core-object-security"/>.</t>
</list></t>

<t>Replay protection is ensured by OSCOAP and the tracking of sequence
numbers at each side.  In the example below, the response contains
sequence number 7 meaning that there have already been some attempts
to join under a given context, not coming from the pledge.  Once JP
receives the response, it looks up and decodes the cid field in order
to decide where to forward it.  JP constructs the CoAP response to pledge
by setting the CoAP token to the value decoded from cid and
constructs the link-local IPv6 address of pledge from the EUI64 address
found in the cid.  Note that JP does not posses the key to decrypt
the COSE object present in the payload so the join_response object is
opaque to it.  The response is matched to the request and verified
for replay protection at pledge using OSCOAP processing rules.  Namely,
to verify the response pledge reconstructs the AAD based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"/>.</t>
  <t>Transaction identifier (Tid) of the corresponding CoAP request.
    Tid contains the context identifier (origin_info object), Sender
    ID (0x00 for pledge), and Sender Sequence number (set to 1 in the
    example).</t>
</list></t>

<t>In addition to AAD, pledge also uses the explicit, protected fields in
the COSE message, present in the payload of the response.  For more
details, see <xref target="I-D.ietf-core-object-security"/> and <xref target="I-D.ietf-cose-msg"/>.</t>

<figure title="Example of a join protocol exchange with a PSK. {} denotes encryption and authentication, [] denotes authentication." anchor="fig_example-psk"><artwork align="center"><![CDATA[
<--E2E OSCOAP-->
Client  Proxy Server
Pledge   JP    JRC
  |      |      |
  +----->|      |            Code: [0.01] (GET)
  | GET  |      |           Token: 0x8c
  |      |      |    Proxy-Scheme: [coap]
  |      |      |        Uri-Host: [6tisch.arpa]
  |      |      | Object-Security: [cid:origin_info, seq:1,
  |      |      |                   {Uri-Path:"j"},
  |      |      |                   <Tag>]
  |      |      |         Payload: -
  |      |      |
  |      +----->|            Code: [0.01] (GET)
  |      | GET  |           Token: 0x7b
  |      |      |        Uri-Host: [6tisch.arpa]
  |      |      | Object-Security: [cid:origin_info, seq:1,
  |      |      |                   {Uri-Path:"j"},
  |      |      |                   <Tag>]
  |      |      |         Payload: -
  |      |      |
  |      |<-----+            Code: [2.05] (Content)
  |      | 2.05 |           Token: 0x7b
  |      |      | Object-Security: -
  |      |      |         Payload: [cid: origin_info, seq:7,
  |      |      |                   {join_response}, <Tag>]
  |      |      |
  |<-----+      |            Code: [2.05] (Content)
  | 2.05 |      |           Token: 0x8c
  |      |      | Object-Security: -
  |      |      |         Payload: [cid: origin_info, seq:7,
  |      |      |                   {join_response}, <Tag>]
  |      |      |
]]></artwork></figure>

<t>Where origin_info and join_response are as follows.</t>

<figure><artwork><![CDATA[
origin_info:
[
    h'00170d00060d9f0e', / Pledge's EUI64 /
    49152, / Pledge's UDP source port /
    0x8c   / Pledge's CoAP token /
]
]]></artwork></figure>

<t>Encodes to h'834800170d00060d9f0e19c000188c' with a size of 15 bytes.</t>

<figure><artwork><![CDATA[
join_response:
[
    [   / COSE Key Set array with a single key /
        {
            1:4, / key type symmetric /
            -1:h'e6bf4287c2d7618d6a9687445ffd33e6' / key value /
        }
    ],
    h'af93' / assigned short address /
]
]]></artwork></figure>

<t>Encodes to h'8281a201042050e6bf4287c2d7618d6a9687445ffd33e642af93'
with a size of 26 bytes.</t>

</section>


  </back>

<!-- ##markdown-source:
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
jpdEOiBFR29eXnPjA22FO4YqVA0rbJdpwYMSG6WdoaLQ51cB9tu45/6yBnJ4
Wx/YKHnSLQ0OiA3BSTlwIkNMoB7jzZs0toGl3k1zioWwZcNXpDyp8DbAZA82
v2y6Rdsa56ZJ++R0bZ+TPjtiTe0Q+TSxjQ4h3HK+2t0C6XP8Gqw8l89HRoSN
zGzlW8oATSQkJsVshYdM0qJpLAJDmDvlAilGvYxcCQCzWU6ZyItLvDatF3TU
uYYNDpYTadtlVqwtMhaWVGT2LhU9iRZBtbLNtZczunEmFMCKJWFK1eDSFIjP
J0TZdybNKG+OXrYHUV+9ooZzBxcyELg9RCia5LIRgv0yB4EpGYNPoW/S8pLw
YrK8oHviSH+yse6vEeAAKtYei6uBx6bLzApxijBAA2S2M0W5QzG7nX6rq3dr
3D9A1eOqffVUuzXWVVVgkz7iGKetuDdDHA8MtLgsmwSP5hYLXko5+apulUeh
MAqK6kEowzbwVoPWJUjTNKOKCYAzWisV3bUr90KR3K/LdSfUhekXC5SWz0A4
sNfUamhqFtpKUFjQgxfzgQKiK4GytQoomA0LasNtKMjVuIwRMswaskWGEDAX
ZSobgRyQQqA9qsITChrOHH9uGPoTnhM4vwjwdYy74fvdsF4vvTPxpkl6s0Gk
KJFT63VN24hkM9BFxsNmaiBH7q3q2FUbif3gJslGeYiBd48ZtLU+Pz9VKGD/
tKfcvpE6ZIO0EdaPRH5NA3gQdG+5mspd6oi3bkuWxVVwcYQ6a5wjvtKOIIAa
GxHQU3TzVcrdzPEtaVRn4Fbo4pNgz10pVeSbL+9WGVrdLHcUFr8Vae38n7H3
3TuFzpWUQpN0pGu/yJnjq6VVoI5AXk0t7TCAQj0vranFfzB0Rgq2iZfJt1OU
/gZrkgxOt29hd19EFfYquT6mTlCeb/hAPTuxTWCe25I6Zq7yIXoPSXLrQMqj
Ms09AW1Fb9OwBn5l03HXqWtyhVoGjXpT4fFS300T1DYpRwNSGtDalb/Ai9ck
JdopxgRcvuN2/m6GoNiOYXe1A95kXaczJ3WUQZMCZSAA12InExM/4PC24sK+
BlFS4h4EOzAmGl5mWbubDB8oHUXEiFfI9jGwcwJW0CanImDFip02sFCfL6N/
pM9HF6MtUofuBiY1RwOkNNnfoO7blZ1bzOGgGH0XpB8JnpNPg3xQdG9iRX04
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

-->

</rfc>


<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.40 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7252 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml">
<!ENTITY RFC7049 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml">
<!ENTITY I-D.ietf-cose-msg SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-cose-msg.xml">
<!ENTITY I-D.ietf-core-object-security SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-object-security.xml">
<!ENTITY RFC7554 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7554.xml">
<!ENTITY RFC6775 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC6347 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC5869 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5869.xml">
<!ENTITY RFC4231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4231.xml">
<!ENTITY RFC7721 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7721.xml">
<!ENTITY I-D.ietf-6tisch-minimal SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-minimal.xml">
<!ENTITY I-D.ietf-6tisch-dtsecurity-secure-join SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-dtsecurity-secure-join.xml">
<!ENTITY I-D.ietf-6tisch-6top-protocol SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-6top-protocol.xml">
<!ENTITY I-D.ietf-6tisch-terminology SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-terminology.xml">
<!ENTITY I-D.selander-ace-cose-ecdhe SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.selander-ace-cose-ecdhe.xml">
<!ENTITY I-D.ietf-anima-bootstrapping-keyinfra SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-bootstrapping-keyinfra.xml">
]>

<?rfc toc="yes"?>
<?rfc softrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-6tisch-minimal-security-01" category="std">

  <front>
    <title>Minimal Security Framework for 6TiSCH</title>

    <author initials="M." surname="Vucinic" fullname="Malisa Vucinic">
      <organization>Inria</organization>
      <address>
        <postal>
          <street>2 Rue Simone Iff</street>
          <city>Paris</city>
          <code>75012</code>
          <country>France</country>
        </postal>
        <email>malisa.vucinic@inria.fr</email>
      </address>
    </author>
    <author initials="J." surname="Simon" fullname="Jonathan Simon">
      <organization>Linear Technology</organization>
      <address>
        <postal>
          <street>32990 Alvarado-Niles Road, Suite 910</street>
          <city>Union City, CA</city>
          <code>94587</code>
          <country>USA</country>
        </postal>
        <email>jsimon@linear.com</email>
      </address>
    </author>
    <author initials="K." surname="Pister" fullname="Kris Pister">
      <organization>University of California Berkeley</organization>
      <address>
        <postal>
          <street>512 Cory Hall</street>
          <city>Berkeley, CA</city>
          <code>94720</code>
          <country>USA</country>
        </postal>
        <email>pister@eecs.berkeley.edu</email>
      </address>
    </author>

    <date year="2017" month="February" day="09"/>

    <area>Internet</area>
    <workgroup>6TiSCH Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This draft describes the minimal mechanisms required to support secure
initial configuration of a pledge, a device being added to a 6TiSCH network.
The goal of this configuration is to set link-layer keys, and to establish a
secure session between each pledge and the join registrar who may use that to
further configure the pledge.
Additional security behaviors and mechanisms may be added on top of this minimal framework.</t>



    </abstract>


  </front>

  <middle>


<section anchor="problems" title="Introduction">

<t>When a previously unknown device seeks admission to a 6TiSCH
<xref target="RFC7554"/> network (to "join"), it first needs to synchronize to the
network.  The device or pledge then configures its IPv6 address and
authenticates itself, and also validates that it is joining the right
network.  At this point it can expect to interact with the network to
configure its link-layer keying material.  Only then may the node
establish an end-to-end secure session with an Internet host using
DTLS <xref target="RFC6347"/> or OSCOAP <xref target="I-D.ietf-core-object-security"/>.  Once the
application requirements are known, the node interacts with its
peers to request additional resources as needed, or to be
reconfigured as the network changes <xref target="I-D.ietf-6tisch-6top-protocol"/>.</t>

<t>This document describes the mechanisms comprising a minimal feature
set for a pledge to join a 6TiSCH network, up to the point where it
can establish a secure session with an Internet host.</t>

<t>It presumes a network as described by <xref target="RFC7554"/>,
<xref target="I-D.ietf-6tisch-6top-protocol"/>, and <xref target="I-D.ietf-6tisch-terminology"/>.
It assumes the pledge pre-configured with either a:</t>

<t><list style="symbols">
  <t>pre-shared key (PSK),</t>
  <t>raw public key (RPK),</t>
  <t>or a locally-valid certificate and a trust anchor.</t>
</list></t>

<t>As the outcome of the join process, the pledge expects one or
more link-layer key(s) and optionally a temporary network identifier.</t>

</section>
<section anchor="Terminology" title="Terminology">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>. These words
may also appear in this document in lowercase, absent their normative meanings.</t>

<t>The reader is expected to be familiar with the terms and concepts defined in
<xref target="I-D.ietf-6tisch-terminology"/>, <xref target="RFC7252"/>,
<xref target="I-D.ietf-core-object-security"/>, and <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.
The following terms are imported: pledge, join proxy, join registrar/coordinator, 
drop ship, imprint, enrollment, ownership voucher.</t>

<t><list style="hanging">
  <t hangText='Pledge:'>
  the prospective device, which has the identity provided to
at the factory.  Neither the device nor the network knows if the
device yet knows if this device belongs with this network.</t>
  <t hangText='Joined Node:'>
  the prospective device, after having completed the join process, often just called a Node.</t>
  <t hangText='Join Proxy (JP):'>
  a stateless relay that provides connectivity between the pledge
and the join registrar/coordinator.</t>
  <t hangText='Join Registrar/Coordinator (JRC):'>
  central entity responsible for authentication and authorization of joining nodes.</t>
</list></t>

</section>
<section anchor="join-overview" title="Join Overview">

<t>This section describes the steps taken by a pledge in a 6TiSCH network.
When a previously unknown device seeks admission to
a 6TiSCH <xref target="RFC7554"/> network, the following exchange occurs:</t>

<t><list style="numbers">
  <t>The pledge listens for an Enhanced Beacon (EB) frame
   <xref target="IEEE8021542015"/>.  This frame provides network synchronization
   information, and tells the device when it can send a frame to the
   node sending the beacons, which plays the role of Join Proxy
   (JP) for the pledge, and when it can expect to receive a frame.</t>
  <t>The pledge configures its link-local IPv6 address and advertizes it to Join Proxy (JP).</t>
  <t>The pledge sends packets to JP in order to securely identify itself to the network.
These packets are directed to the Join Registrar/Coordinator  (JRC),
which may be co-located on the JP or another device.</t>
  <t>The pledge receives one or more packets from JRC (via the JP) that sets
up one or more link-layer keys used to authenticate subsequent
transmissions to peers.</t>
</list></t>

<t>From the pledge's perspective, minimal joining is a local phenomenon &#8211;
the pledge only interacts with the JP, and it need not know how far it is
from the DAG root, or how to route to the JRC.
Only after establishing one or more link-layer keys does it need to know
about the particulars of a 6TiSCH network.</t>

<t>The handshake is shown as a transaction diagram in <xref target="fig_sequence-diagram"/>:</t>

<figure title="Message sequence for join protocol." anchor="fig_sequence-diagram"><artwork align="center"><![CDATA[
      +-----+               +----------+              +-----------+
      | JRC |               |    JP    |              |  pledge   |
      |     |               |          |              |           |
      +-----+               +----------+              +-----------+
         |                        |                            |
         |                        |-----------ENH BEACON (1)-->|
         |                        |                            |
         |                        |<--Neighbor Discovery (2)-->|
         |                        |                            |
         |<--Sec. Handshake (3a)--|---Security Handshake (3)-->|
         |                        |                            |
         |<----Join request (4a)--|---------Join request (4)---|
         |                        |                            |
         |----Join response (5a)--|--------Join response (5)-->|
         |                        |                            |

]]></artwork></figure>

<t>The details of each step are described in the following sections.</t>

<section anchor="step-1-enhanced-beacon" title="Step 1 - Enhanced Beacon">

<t>The pledge hears an EB from the JP and synchronizes itself to the joining
schedule using the cells contained in the EB.
At this point the pledge MAY proceed to step 2, or continue to listen for additional EBs.
If more than one EB is heard, the pledge MAY use a metric based on DAG rank
and received signal level of the EB, or other factors to decide which JP to
use for the security handshake in step 3.
Details on how a pledge chooses the JP are out of scope of this specification.</t>

</section>
<section anchor="step-2-neighbor-discovery" title="Step 2 - Neighbor Discovery">

<t>At this point, pledge forms its link-local IPv6 address based on EUI64
and MAY further follow the Neighbor Discovery (ND) process described
in Section 5 of <xref target="RFC6775"></xref>.</t>

</section>
<section anchor="step-3-security-handshake" title="Step 3 - Security Handshake">

<t>The security handshake between pledge and JRC uses Ephemeral
Diffie-Hellman over COSE (EDHOC) <xref target="I-D.selander-ace-cose-ecdhe"/>
to establish the shared session secret used to encrypt the join request and
join response.</t>

<t>The security handshake step is OPTIONAL in case PSKs are used, while it is
REQUIRED for RPKs and certificates. When using certificates, the process
outlined in <xref target="I-D.ietf-6tisch-dtsecurity-secure-join"/> would be followed, and
once complete, the process would continue here with a locally relevant
security credential, or an established shared secret.</t>

<t>In case the handshake step is omitted, the shared secret used for protection
of the join request and join response in the next step is the PSK.</t>

<t>A consequence is that if the long-term PSK is
compromised, keying material transferred as part of the join response
is compromised as well.
Physical compromise of the pledge, however, would also imply the compromise
of the same keying material, as it is likely to be found in node's memory.</t>

<section anchor="pre-shared-key" title="Pre-Shared Key">

<t>The Diffie-Hellman key exchange and the use of EDHOC is optional,
when using a pre-shared symmetric key.
This cuts down on traffic between JRC and pledge, but requires
pre-configuration (one-touch) of the shared key on both devices.</t>

<t>It is REQUIRED to use unique PSKs for each pledge.  If there are multiple
JRC's in the network (such as for redundancy), they would have to share a
database of PSKs.</t>

</section>
<section anchor="asymmetric-keys" title="Asymmetric Keys">

<t>The Security Handshake step is required, when using asymmetric keys.
Before conducting the Diffie-Hellman key exchange using EDHOC <xref target="I-D.selander-ace-cose-ecdhe"/>
the pledge and JRC need to receive and validate each other's public key certificate.
When RPKs are pre-configured at pledge and JRC, they can directly proceed to the handshake.</t>

</section>
</section>
<section anchor="step-4-join-request" title="Step 4 - Join Request">

<t>The join request is sent from the pledge to the JP using the shared slot as
described in the EB, and forwarded to the JRC. Which slot the JP uses to
transmit to the JRC is out of scope: some networks may wish to dedicate
specific slots for this join traffic.</t>

<t>The join request is authenticated/encrypted end-to-end using AES-CCM-
16-64-128 algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from
the shared secret from step 3.
The nonce is derived from the shared secret, the pledge's EUI64 and a
monotonically increasing counter initialized to 0 when first starting.</t>

</section>
<section anchor="step-5-join-response" title="Step 5 - Join Response">

<t>The join response is sent from the JRC to the pledge through JP that serves as a stateless relay.
Packet containing the join response travels on the path from JRC to JP using
pre-established routes in the network.
The JP delivers it to the pledge using the slot information from the EB.
JP operates as the application-layer proxy and does not keep
any state to relay the message. It uses information sent in the
clear within the join response to decide where to forward to.</t>

<t>The join response is authenticated/encrypted using AES-CCM-16-64-128
algorithm from <xref target="I-D.ietf-cose-msg"/> and a key derived from the shared
secret from step 3.</t>

<t>The nonce is derived from the shared secret, pledge's EUI64 and a
monotonically increasing counter matching that of the join request.</t>

<t>The join response contains one or more (per-peer) link-layer key(s) K2 that
the pledge will use for subsequent communication. Each K2 that is provided by the
JRC is associated with an 802.15.4 keyid. In other link-layer technologies,
a different identifier may be substituted.
It optionally also contains an IEEE 802.15.4 short-address
<xref target="IEEE8021542015"/> assigned to pledge by JRC.</t>

</section>
</section>
<section anchor="protocol-specification" title="Protocol Specification">

<t>The join protocol in <xref target="fig_sequence-diagram"/> is implemented over Constrained
Application Protocol (CoAP) <xref target="RFC7252"/>.
The Pledge plays the role of a CoAP client, JRC the role of a CoAP server,
while JP implements CoAP forward proxy functionality <xref target="RFC7252"/>
Since JP is also likely a constrained device, it does not need to implement a
cache but rather process forwarding-related CoAP options and make requests on
behalf of pledge that is not yet part of the network.</t>

<t>Pledge and JRC MUST protect their exchange end-to-end (i.e. through the
proxy) using Object Security of CoAP (OSCOAP)
<xref target="I-D.ietf-core-object-security"/>.</t>

<section anchor="proxy-operation-of-join-proxy-jp" title="Proxy Operation of Join Proxy (JP)">

<t>The pledge designates a JP as a proxy by including in the CoAP requests to
the JP the Proxy-Scheme option with value "coap" (CoAP-to-CoAP proxy).
The pledge MUST include the Uri-Host option with its value set to the
well-known JRC's alias - "6tisch.arpa".
The pledge does not need to learn the actual IPv6 address of JRC at any time
during the join protocol.  The JP knows the address of the JRC, via a
provisioning process that occured when the JP, acting as a pledge, joined.
The initial bootstrap of the DODAG root would require explicit provisioning
of the JRC address.</t>

<t>Note that the CoAP proxy by default keeps state information in order
to forward the response towards the originator of the request.  This
state information comprises CoAP token, but the implementations also
need to keep track of the IPv6 address of the host, as well as the
corresponding UDP source port number.  In the setting where the proxy
is a constrained device, as in the case of JP, this makes it prone to
Denial of Service (DoS) attacks, due to the limited memory.</t>

<t>In order to facilitate a stateless implementation of join proxying, the
pledge shall encode in the CoAP message the information necessary for the JP
to send the response back - "origin_info".
For this purpose, the pledge uses the "Context Identifier (Cid)" parameter of
OSCOAP's security context structure.
Context Identifier is sent in clear, readable by JP, and MUST be echoed back
in the response from JRC.
This makes it possible to implement JP's CoAP proxy in a stateless manner.
It also allows JRC to look up the right security context for communication with a given pledge.</t>

<section anchor="implementation-of-origininfo" title="Implementation of origin_info">

<t>The origin_info is implemented as a CBOR <xref target="RFC7049"/> array object
containing:</t>

<t><list style="symbols">
  <t>EUI64: pledge's EUI64 address</t>
  <t>source_port: pledge's UDP source port (EDNOTE/XXX: Can we fix the source port?)</t>
  <t>token: pledge's CoAP token (EDNOTE: is there a way to get rid of token?)</t>
</list></t>

<figure><artwork><![CDATA[
origin_info = [
    EUI64 : bstr,
    source_port : uint,
    token : uint
]
]]></artwork></figure>

</section>
</section>
<section anchor="oscoap-security-context-instantiation" title="OSCOAP Security Context Instantiation">

<t>The OSCOAP security context MUST be derived at pledge and JRC as per Section
3.2 of <xref target="I-D.ietf-core-object-security"/> using HKDF <xref target="RFC5869"/> as the key
derivation function.</t>

<t><list style="symbols">
  <t>Context Identifier (Cid) MUST be the origin_info object wrapped as a byte
    string (bstr).  This context information is included in the derivation
    of the shared secret, so while visible, it is protected.</t>
  <t>Algorithm MUST be set to AES-CCM-16-64-128 from
    <xref target="I-D.ietf-cose-msg"/>.  CoAP messages are therefore protected with
    an 8-byte CCM authentication tag and the algorithm uses 13-byte
    long nonces.</t>
  <t>Base key (base_key) MUST be the secret generated by the run of
    EDHOC, or the PSK in case EDHOC step was omitted.</t>
  <t>Sender ID of pledge MUST be set to 0x00, while the ID of JRC MUST be set to 0x01.</t>
</list></t>

<t>The hash algorithm that instantiates HKDF MUST be SHA-256 <xref target="RFC4231"></xref>.
The derivation in <xref target="I-D.ietf-core-object-security"/> results in traffic
keys and static IVs for each side of the conversation.  Nonces are
constructed by XOR'ing the static IV with current sequence number.
The context derivation process occurs exactly once.</t>

<t>Implementations MUST ensure that multiple CoAP requests to different JRCs
result in the use of the same OSCOAP context so that sequence numbers are
properly incremented for each request.
This may happen in a scenario where there are multiple 6TiSCH networks
present and the pledge tries to join one network at a time.</t>

</section>
<section anchor="implementation-of-join-request" title="Implementation of Join Request">

<t>Join Request message SHALL be mapped to a CoAP request:</t>

<t><list style="symbols">
  <t>The request method is GET.</t>
  <t>The Proxy-Scheme option is set to "coap".</t>
  <t>The Uri-Host option is set to "6tisch.arpa".</t>
  <t>The Uri-Path option is set to "j".</t>
  <t>The object security option SHALL be set according to
<xref target="I-D.ietf-core-object-security"/> and OSCOAP parameters set as
described above.</t>
</list></t>

</section>
<section anchor="implementation-of-join-response" title="Implementation of Join Response">

<t>If OSCOAP processing is a success, Join Response message SHALL be a
CoAP response:</t>

<t><list style="symbols">
  <t>The response Code is 2.05 (Content).</t>
  <t>The payload is a CBOR array containing, in order:
  <list style="symbols">
      <t>COSE Key Set <xref target="I-D.ietf-cose-msg"/>.  Each key in the Key Set
SHALL be a symmetric key.  A key that is present in the Key Set
  and does not have an identifier is assumed to be "K2" link-
  layer key from <xref target="I-D.ietf-6tisch-minimal"/>.  Parameter "kid" of
  the COSE Key structure SHALL be used to denote pair-wise keys
  if present, where the value SHALL be set to the address of the
  corresponding peer.</t>
      <t>Optional byte string representing IEEE 802.15.4 short address
  assigned to pledge.  The short-address includes a lease time.  It is
  used for configuring both L2 short addresses and L3 short
  addresses.</t>
    </list></t>
</list></t>

<figure><artwork><![CDATA[
payload = [
    COSE_KeySet,
    ? short_address : bstr,
]
]]></artwork></figure>

<t>In case JRC determines that pledge is not supposed to join the network
(e.g. by failing to find an appropriate security context), it should respond
with a 4.01 Unauthorized error.
Upon reception of a 4.01 Unauthorized, the pledge SHALL attempt to join the
next advertised 6TiSCH network.
If all join attempts have failed at pledge, the pledge SHOULD signal to the
user by an out-of-band mechanism the presence of an error condition.</t>

</section>
</section>
<section anchor="link-layer-requirements" title="Link-layer requirements">

<t>All frames in a 6TiSCH network MUST use link-layer frame security.
The frame security options MUST include frame authentication, and MAY
include frame encryption.</t>

<t>Link-layer frames are protected with a 16-byte key, and a 13-byte nonce
constructed
from current Absolute Slot Number (ASN) and the source (the JP for
EBs) address, as shown in <xref target="fig_ccm-nonce"/>:</t>

<figure title="Link-layer CCM* nonce construction" anchor="fig_ccm-nonce"><artwork align="center"><![CDATA[
+-------------------------------------------+
|  Address (8B or 00-padded 2B) | ASN (5B)  |
+-------------------------------------------+
]]></artwork></figure>

<t>The pledge does not initially do any authentication of the EB frames, as it
does not know the K1 key.  When sending frames, the pledge sends unencrypted
and unauthenticated frames (exempt mode in 802.15.4).  JP accepts these frames
for the duration of the join process. How JP learns whether
the join process is ongoing is out of scope of this specification.</t>

<t>As the EB itself cannot be authenticated by pledge, an attacker may craft a
frame that appears to be a valid EB, since the pledge can neither know the
ASN a priori nor verify the address of the JP.
This permits a Denial of Service (DoS) attack at the pledge.
Beacon authentication keys are discussed in <xref target="I-D.ietf-6tisch-minimal"/>.</t>

</section>
<section anchor="asymmetric-keys-1" title="Asymmetric Keys">

<t>Certificates or pre-configured RPKs may be used to exchange public keys
between the pledge and JRC.
The key pair is generated using elliptic curve secp256r1, and
the certificate containing the public key is signed using ECDSA.  (XXX: would
be nice to move to EdDSA)</t>

<t>The certificate itself may be a compact
representation of an X.509 certificate, or a full X.509 certificate.
Compact representation of X.509 certificates is out of scope of this
specification.  The certificate is signed by a root CA whose
certificate is installed on all nodes participating in a particular
6TiSCH network, allowing each node to validate the certificate of the
JRC or pledge as appropriate.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>In case PSKs are used, this document mandates that the pledge and JRC are
pre-configured with unique keys.
The uniqueness of generated nonces is guaranteed under the assumption of
unique EUI64 identifiers for each pledge.
Note that the address of the JRC does not take part in nonce construction.
Therefore, even should an error occur, and a PSK shared by a group of nodes,
the nonces constructed as part of the different responses are unique.  The
PSK is still important for authentication of the pledge and authentication of
the JRC to the pledge. Should an attacker come to know the PSK, then a
man-in-the-middle attack is possible.  The well known problem with Bluetooth
headsets with a "0000" pin applies here.
The design differentiates between nonces constructed for requests and nonces
constructed for responses by different sender identifiers (0x00 for pledge
and 0x01 for JRC).</t>

<t>Being a stateless relay, JP blindly forwards the join traffic into the network.
While the exchange between pledge and JP takes place over a shared cell, join
traffic is forwarded using dedicated cells on the JP to JRC path.
In case of distributed scheduling, the join traffic may therefore cause
intermediate nodes to request additional bandwidth. (EDNOTE: this is a
problem that needs to be solved)
Because the relay operation of JP is implemented at the application layer, JP
is the only hop on the JP-6LBR path that can distinguish join traffic from
regular IP traffic in the network.
It is therefore recommended to implement stateless rate limiting at JP: a
simple bandwidth (in bytes or packets/second) cap would be appropriate.</t>

<t>The shared nature of the "minimal" cell used for join traffic makes the
network prone to DoS attacks by congesting the JP with bogus radio traffic.
As such an attacker is limited by emitted radio power, redundancy in the
number of deployed JPs alleviates the issue and also gives the pledge a
possibility to use the best available link for join.
How a network node decides to become a JP is out of scope of this specification.</t>

<t>At the time of the join, the pledge has no means of verifying the content in
the EB and has to accept it at "face value".
In case the pledge tries to join an attacker's network, the join response
message in such cases will either fail the security check or time out.
The pledge may implement a blacklist in order to filter out undesired beacons
and try to join the next seemingly valid network.
The blacklist alleviates the issue but is effectively
limited by the node's available memory.
Such bogus beacons will prolong the join time of the pledge and so the time
spent in "minimal" <xref target="I-D.ietf-6tisch-minimal"/> duty cycle mode.</t>

</section>
<section anchor="privacy-considerations" title="Privacy Considerations">

<t>This specification relies on the uniqueness of EUI64 that is transferred in
clear as part of the security context identifier. (EDNOTE: should we say IID
here?)
Privacy implications of using such long-term identifier are discussed
in <xref target="RFC7721"/> and comprise correlation of activities over time,
location tracking, address scanning and device-specific vulnerability
exploitation.  Since the join protocol is executed rarely compared to
the network lifetime, long-term threats that arise from using EUI64
are minimal.
In addition, the join response message contains an optional short address
which can be assigned by JRC to the pledge.
The short address is independent of the long-term identifier EUI64 and is
encrypted in the response.
For that reason, it is not possible to
correlate the short address with the EUI64 used during the join.  Use
of short addresses once the join protocol completes mitigates the
aforementioned privacy risks.  In addition, EDHOC may be used for
identity protection during the join protocol by generating a random
context identifier in place of the EUI64
<xref target="I-D.selander-ace-cose-ecdhe"/>.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>There is no IANA action required for this document.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>The work on this document has been partially supported by the
European Union's H2020 Programme for research, technological
development and demonstration under grant agreement No 644852,
project ARMOUR.</t>

<t>The authors are grateful to Thomas Watteyne and Goeran Selander for
reviewing the draft.  The authors would also like to thank Francesca
Palombini and Ludwig Seitz for participating in the discussions that
have helped shape the document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC7252;
&RFC7049;
&I-D.ietf-cose-msg;
&I-D.ietf-core-object-security;


    </references>

    <references title='Informative References'>

&RFC7554;
&RFC6775;
&RFC6347;
&RFC5869;
&RFC4231;
&RFC7721;
&I-D.ietf-6tisch-minimal;
&I-D.ietf-6tisch-dtsecurity-secure-join;
&I-D.ietf-6tisch-6top-protocol;
&I-D.ietf-6tisch-terminology;
&I-D.selander-ace-cose-ecdhe;
&I-D.ietf-anima-bootstrapping-keyinfra;
<reference anchor="IEEE8021542015" >
  <front>
    <title>IEEE Std 802.15.4-2015 Standard for Low-Rate Wireless Personal Area Networks (WPANs)</title>
    <author initials="." surname="IEEE standard for Information Technology">
      <organization></organization>
    </author>
    <date year="2015"/>
  </front>
</reference>


    </references>


<section anchor="example" title="Example">

<t><xref target="fig_example-psk"/> illustrates a join protocol exchange in case PSKs are used.
Pledge instantiates the OSCOAP context and derives the traffic keys and
nonces from the PSK.  It uses the instantiated context to protect the
CoAP request addressed with Proxy-Scheme option and well-known host
name of JRC in the Uri-Host option.  The example assumes a JP that is
already aware of JRC's IPv6 address and does not need to resolve the
well-known "6tisch.arpa" host name.  Triggered by the presence of
Proxy-Scheme option, JP forwards the request to the JRC.  Once JRC
receives the request, it looks up the correct context based on the
context identifier (cid) field.  It reconstructs OSCOAP's external
Additional Authenticated Data (AAD) needed for verification based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"/></t>
  <t>Request URI reconstructed following
    <xref target="I-D.ietf-core-object-security"/>.</t>
</list></t>

<t>Replay protection is ensured by OSCOAP and the tracking of sequence
numbers at each side.  In the example below, the response contains
sequence number 7 meaning that there have already been some attempts
to join under a given context, not coming from the pledge.  Once JP
receives the response, it looks up and decodes the cid field in order
to decide where to forward it.  JP constructs the CoAP response to pledge
by setting the CoAP token to the value decoded from cid and
constructs the link-local IPv6 address of pledge from the EUI64 address
found in the cid.  Note that JP does not posses the key to decrypt
the COSE object present in the payload so the join_response object is
opaque to it.  The response is matched to the request and verified
for replay protection at pledge using OSCOAP processing rules.  Namely,
to verify the response pledge reconstructs the AAD based on:</t>

<t><list style="symbols">
  <t>Version field of the received CoAP header.</t>
  <t>Code field of the received CoAP header.</t>
  <t>Algorithm being the AES-CCM-16-64-128 from <xref target="I-D.ietf-cose-msg"/>.</t>
  <t>Transaction identifier (Tid) of the corresponding CoAP request.
    Tid contains the context identifier (origin_info object), Sender
    ID (0x00 for pledge), and Sender Sequence number (set to 1 in the
    example).</t>
</list></t>

<t>In addition to AAD, pledge also uses the explicit, protected fields in
the COSE message, present in the payload of the response.  For more
details, see <xref target="I-D.ietf-core-object-security"/> and <xref target="I-D.ietf-cose-msg"/>.</t>

<figure title="Example of a join protocol exchange with a PSK. {} denotes encryption and authentication, [] denotes authentication." anchor="fig_example-psk"><artwork align="center"><![CDATA[
<--E2E OSCOAP-->
Client  Proxy Server
Pledge   JP    JRC
  |      |      |
  +----->|      |            Code: [0.01] (GET)
  | GET  |      |           Token: 0x8c
  |      |      |    Proxy-Scheme: [coap]
  |      |      |        Uri-Host: [6tisch.arpa]
  |      |      | Object-Security: [cid:origin_info, seq:1,
  |      |      |                   {Uri-Path:"j"},
  |      |      |                   <Tag>]
  |      |      |         Payload: -
  |      |      |
  |      +----->|            Code: [0.01] (GET)
  |      | GET  |           Token: 0x7b
  |      |      |        Uri-Host: [6tisch.arpa]
  |      |      | Object-Security: [cid:origin_info, seq:1,
  |      |      |                   {Uri-Path:"j"},
  |      |      |                   <Tag>]
  |      |      |         Payload: -
  |      |      |
  |      |<-----+            Code: [2.05] (Content)
  |      | 2.05 |           Token: 0x7b
  |      |      | Object-Security: -
  |      |      |         Payload: [cid: origin_info, seq:7,
  |      |      |                   {join_response}, <Tag>]
  |      |      |
  |<-----+      |            Code: [2.05] (Content)
  | 2.05 |      |           Token: 0x8c
  |      |      | Object-Security: -
  |      |      |         Payload: [cid: origin_info, seq:7,
  |      |      |                   {join_response}, <Tag>]
  |      |      |
]]></artwork></figure>

<t>Where origin_info and join_response are as follows.</t>

<figure><artwork><![CDATA[
origin_info:
[
    h'00170d00060d9f0e', / Pledge's EUI64 /
    49152, / Pledge's UDP source port /
    0x8c   / Pledge's CoAP token /
]
]]></artwork></figure>

<t>Encodes to h'834800170d00060d9f0e19c000188c' with a size of 15 bytes.</t>

<figure><artwork><![CDATA[
join_response:
[
    [   / COSE Key Set array with a single key /
        {
            1:4, / key type symmetric /
            -1:h'e6bf4287c2d7618d6a9687445ffd33e6' / key value /
        }
    ],
    h'af93' / assigned short address /
]
]]></artwork></figure>

<t>Encodes to h'8281a201042050e6bf4287c2d7618d6a9687445ffd33e642af93'
with a size of 26 bytes.</t>

</section>


  </back>

<!-- ##markdown-source:
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
/wuR2AW5B3AAAA==

-->

</rfc>

